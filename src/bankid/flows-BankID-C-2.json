[
    {
        "id": "56ce2849.3c576",
        "type": "tab",
        "label": "BankID-C",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b9112da8.21a498",
        "type": "inject",
        "z": "56ce2849.3c576",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 200,
        "wires": [
            [
                "f6a46e42.084cb8"
            ]
        ]
    },
    {
        "id": "fbb1ae81.c551e",
        "type": "split",
        "z": "56ce2849.3c576",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 290,
        "y": 500,
        "wires": [
            [
                "ff108ae7.c4a8f8"
            ]
        ]
    },
    {
        "id": "77c3167a.96c5f",
        "type": "join",
        "z": "56ce2849.3c576",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 630,
        "y": 500,
        "wires": [
            [
                "59a8d120.176b48"
            ]
        ]
    },
    {
        "id": "3badc02d.c9aa18",
        "type": "debug",
        "z": "56ce2849.3c576",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 690,
        "y": 920,
        "wires": []
    },
    {
        "id": "ff108ae7.c4a8f8",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "Properties Man",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "                <tem:TProperties>\n                  <tem:Code>{{payload.Code}}</tem:Code>\n                  <tem:Value>{{payload.Value}}</tem:Value>\n                </tem:TProperties>",
        "output": "str",
        "x": 460,
        "y": 500,
        "wires": [
            [
                "77c3167a.96c5f"
            ]
        ]
    },
    {
        "id": "af39c3c8.37b1b8",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "Properties Top",
        "field": "xml.in.prop_top",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "            \n            <tem:Properties>",
        "output": "str",
        "x": 340,
        "y": 540,
        "wires": [
            [
                "1dfca981.c67026"
            ]
        ]
    },
    {
        "id": "1dfca981.c67026",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "Properties Bot",
        "field": "xml.in.prop_bot",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\n            </tem:Properties>",
        "output": "str",
        "x": 520,
        "y": 540,
        "wires": [
            [
                "6d523b03.bdcdbc"
            ]
        ]
    },
    {
        "id": "c9fd915e.c133",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "Init",
        "func": "msg.xml = {};\nmsg.xml.in = {};\nmsg.xml.out = {};\nmsg.xml.out.prop_man = \"\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 360,
        "wires": [
            [
                "4ba99f2e.b5c708"
            ]
        ]
    },
    {
        "id": "6d523b03.bdcdbc",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "Properties XML",
        "field": "xml.out.Properties",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{{xml.in.prop_top}}}\n{{{xml.out.prop_man}}}\n{{{xml.in.prop_bot}}}",
        "output": "str",
        "x": 700,
        "y": 540,
        "wires": [
            [
                "4dde89d6.7af9e8"
            ]
        ]
    },
    {
        "id": "d3b7b87d.7a9bc",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "Create Client XML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{{xml.in.top}}}\n{{{xml.out.Client}}}\n{{{xml.out.ClientNames}}}\n{{{xml.out.Individuals}}}\n{{{xml.out.Identificatons}}}\n{{{xml.out.Addresses}}}\n{{{xml.out.Communications}}}\n{{{xml.out.Properties}}}\n{{{xml.in.bot}}}",
        "output": "str",
        "x": 330,
        "y": 920,
        "wires": [
            [
                "3badc02d.c9aa18",
                "8fe60f.0ad721f",
                "6a3e54e9.3540f4"
            ]
        ]
    },
    {
        "id": "e5b24d49.47b17",
        "type": "file",
        "z": "56ce2849.3c576",
        "name": "client-create-bankid-NR.xml",
        "filename": "/home/devel/works/node/src/ugb-vuejs-meest/src/bankid/client-create-bankid-NR.xml",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 740,
        "y": 960,
        "wires": [
            [
                "dbd7d396.5b86"
            ]
        ]
    },
    {
        "id": "dbd7d396.5b86",
        "type": "debug",
        "z": "56ce2849.3c576",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 690,
        "y": 1000,
        "wires": []
    },
    {
        "id": "59a8d120.176b48",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "Properties Xml",
        "func": "var data = msg.payload;\nvar out = \"\";\nfor(var x of data ){\n    out += x;    \n}\nmsg.xml.out.prop_man = out;\nmsg.payload = out;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 540,
        "wires": [
            [
                "af39c3c8.37b1b8"
            ]
        ]
    },
    {
        "id": "4ba99f2e.b5c708",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "XML Top",
        "field": "xml.in.top",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tem=\"http://tempuri.org/\">\n   <soapenv:Header>\n      <tem:AuthSoapHeader>\n        <tem:Login>istest</tem:Login>\n         <tem:Password>gfhjk</tem:Password>\n      </tem:AuthSoapHeader>\n   </soapenv:Header>\n   \n   <soapenv:Body>\n      <tem:CreateClientFL>\n         <tem:client>\n            <tem:Request>\n               <tem:RequestId>12547</tem:RequestId>\n               <tem:UserLogin>UKRGAS\\appmb</tem:UserLogin>\n            </tem:Request>\n            <!--tem:ClientId>1747753</tem:ClientId-->\n            <tem:SendToScrooge>1</tem:SendToScrooge>",
        "output": "str",
        "x": 520,
        "y": 360,
        "wires": [
            [
                "df4d7677.e64e1"
            ]
        ]
    },
    {
        "id": "df4d7677.e64e1",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "XML Bot",
        "field": "xml.in.bot",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "         \n         </tem:client>\n      </tem:CreateClientFL>\n   </soapenv:Body>\n</soapenv:Envelope>",
        "output": "str",
        "x": 680,
        "y": 360,
        "wires": [
            [
                "256e279c.d24618"
            ]
        ]
    },
    {
        "id": "3a220551.b254ba",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "props data",
        "func": "msg.payload = msg.in.data.props;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 150,
        "y": 500,
        "wires": [
            [
                "fbb1ae81.c551e"
            ]
        ]
    },
    {
        "id": "a63a1f6e.ecf42",
        "type": "split",
        "z": "56ce2849.3c576",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 290,
        "y": 600,
        "wires": [
            [
                "52719cee.6ef56c"
            ]
        ]
    },
    {
        "id": "30d920c8.366208",
        "type": "join",
        "z": "56ce2849.3c576",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 630,
        "y": 600,
        "wires": [
            [
                "a139a46b.58fa88"
            ]
        ]
    },
    {
        "id": "52719cee.6ef56c",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "Address Man",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "               \n               <tem:TAddresses>\n                  <tem:TypeId>{{payload.TypeCode}}</tem:TypeId>\n                  <tem:TypeCode>{{payload.TypeCode}}</tem:TypeCode>\n                  <tem:Country>804</tem:Country>\n                  <!--tem:PostalCode>14017</tem:PostalCode-->\n                  <tem:State>{{payload.State}}</tem:State>\n                  <tem:Region/>\n                  <tem:TownshipType>3508</tem:TownshipType>\n                  <tem:Town>{{payload.Town}}</tem:Town>\n                  <tem:StreetType>3510</tem:StreetType>\n                  <tem:Street>{{payload.Street}}</tem:Street>\n                  <tem:HouseType>3511</tem:HouseType>\n                  <tem:HouseNumber>{{payload.HouseNumber}}</tem:HouseNumber>\n                  <tem:FlatType>3506</tem:FlatType>\n                  <tem:FlatNumber>{{payload.FlatNumber}}</tem:FlatNumber>\n                  <tem:LandlinePhoneNumber/>\n                  <tem:PropertyStatus/>\n                  <tem:Status>1</tem:Status>\n               </tem:TAddresses>",
        "output": "str",
        "x": 450,
        "y": 600,
        "wires": [
            [
                "30d920c8.366208"
            ]
        ]
    },
    {
        "id": "420af016.fd87e",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "Addresses Top",
        "field": "xml.in.addr_top",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "            \n            <tem:Addresses>",
        "output": "str",
        "x": 340,
        "y": 640,
        "wires": [
            [
                "7460e9e4.d32338"
            ]
        ]
    },
    {
        "id": "7460e9e4.d32338",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "Addresses Bot",
        "field": "xml.in.addr_bot",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "            \n            </tem:Addresses>",
        "output": "str",
        "x": 520,
        "y": 640,
        "wires": [
            [
                "258650d8.1499a8"
            ]
        ]
    },
    {
        "id": "258650d8.1499a8",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "Addresses XML",
        "field": "xml.out.Addresses",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{{xml.in.addr_top}}}\n{{{xml.out.addr_man}}}\n{{{xml.in.addr_bot}}}",
        "output": "str",
        "x": 700,
        "y": 640,
        "wires": [
            [
                "5495b45b.a5fc6c",
                "947a13c6.30ae18"
            ]
        ]
    },
    {
        "id": "a139a46b.58fa88",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "Addresses Xml",
        "func": "var data = msg.payload;\nvar out = \"\";\nfor(var x of data ){\n    out += x;    \n}\nmsg.xml.out.addr_man = out;\nmsg.payload = out;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 640,
        "wires": [
            [
                "420af016.fd87e"
            ]
        ]
    },
    {
        "id": "4dde89d6.7af9e8",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "addr data",
        "func": "msg.payload = msg.in.data.addr;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 140,
        "y": 600,
        "wires": [
            [
                "a63a1f6e.ecf42"
            ]
        ]
    },
    {
        "id": "d391ff3a.2d6fb8",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "Client Man",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\n            <tem:Clients>\n               <tem:StateCode>{{payload.StateCode}}</tem:StateCode>\n               <tem:Residency>{{payload.Residency}}</tem:Residency>\n               <tem:Name>{{payload.Name}}</tem:Name>               \n               <tem:Type>1</tem:Type>\n               <tem:SubType>0</tem:SubType>\n               <tem:isTechFlag>0</tem:isTechFlag>\n               <tem:IsOut>0</tem:IsOut>\n               <tem:IsPotential>0</tem:IsPotential>\n               <tem:IsPartner>false</tem:IsPartner>\n               <tem:Status>1</tem:Status>\n            </tem:Clients>",
        "output": "str",
        "x": 330,
        "y": 400,
        "wires": [
            [
                "1d34346e.af3694"
            ]
        ]
    },
    {
        "id": "55207fb7.01184",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "Client XML",
        "field": "xml.out.Client",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{{xml.out.client_man}}}",
        "output": "str",
        "x": 690,
        "y": 400,
        "wires": [
            [
                "52306d86.07cfdc"
            ]
        ]
    },
    {
        "id": "1d34346e.af3694",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "Client Xml",
        "func": "\nmsg.xml.out.client_man = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 400,
        "wires": [
            [
                "55207fb7.01184"
            ]
        ]
    },
    {
        "id": "256e279c.d24618",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "client data",
        "func": "msg.payload = msg.in.data.client;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 150,
        "y": 400,
        "wires": [
            [
                "d391ff3a.2d6fb8"
            ]
        ]
    },
    {
        "id": "c3062a36.19653",
        "type": "split",
        "z": "56ce2849.3c576",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 290,
        "y": 700,
        "wires": [
            [
                "782f68e9.a3a428"
            ]
        ]
    },
    {
        "id": "d1b85d39.bbaef8",
        "type": "join",
        "z": "56ce2849.3c576",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 630,
        "y": 700,
        "wires": [
            [
                "f29f2ad2.44021"
            ]
        ]
    },
    {
        "id": "782f68e9.a3a428",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "Commun Man",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "               <tem:TCommunications>\n                  <tem:TypeId>{{payload.TypeId}}</tem:TypeId>\n                  <tem:TypeCode>{{payload.TypeId}}</tem:TypeCode>\n                  <tem:Value>{{payload.Value}}</tem:Value>\n                  <tem:IsMain>true</tem:IsMain>\n                  <tem:IsVerified>true</tem:IsVerified>\n                  <tem:Note/>\n                  <tem:SourceInfo/>\n                  <tem:Status>1</tem:Status>\n               </tem:TCommunications>\n",
        "output": "str",
        "x": 460,
        "y": 700,
        "wires": [
            [
                "d1b85d39.bbaef8"
            ]
        ]
    },
    {
        "id": "4bac1e32.16b368",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "Commun Top",
        "field": "xml.in.comm_top",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\n            <tem:Communications>\n",
        "output": "str",
        "x": 330,
        "y": 740,
        "wires": [
            [
                "67ba3c09.6cb984"
            ]
        ]
    },
    {
        "id": "67ba3c09.6cb984",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "Commun Bot",
        "field": "xml.in.comm_bot",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "            </tem:Communications>",
        "output": "str",
        "x": 510,
        "y": 740,
        "wires": [
            [
                "54fdeb54.f4d3cc"
            ]
        ]
    },
    {
        "id": "54fdeb54.f4d3cc",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "Commun XML",
        "field": "xml.out.Communications",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{{xml.in.comm_top}}}\n{{{xml.out.comm_man}}}\n{{{xml.in.comm_bot}}}",
        "output": "str",
        "x": 700,
        "y": 740,
        "wires": [
            [
                "2a138ca4.512bac"
            ]
        ]
    },
    {
        "id": "f29f2ad2.44021",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "Commun Xml",
        "func": "var data = msg.payload;\nvar out = \"\";\nfor(var x of data ){\n    out += x;    \n}\nmsg.xml.out.comm_man = out;\nmsg.payload = out;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 160,
        "y": 740,
        "wires": [
            [
                "4bac1e32.16b368"
            ]
        ]
    },
    {
        "id": "5495b45b.a5fc6c",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "comm data",
        "func": "msg.payload = msg.in.data.comm;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 150,
        "y": 700,
        "wires": [
            [
                "c3062a36.19653"
            ]
        ]
    },
    {
        "id": "1b2b0f21.3fc331",
        "type": "split",
        "z": "56ce2849.3c576",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 290,
        "y": 800,
        "wires": [
            [
                "2858d96f.0d7736"
            ]
        ]
    },
    {
        "id": "b3ce5063.2e3a58",
        "type": "join",
        "z": "56ce2849.3c576",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 630,
        "y": 800,
        "wires": [
            [
                "dd492c8d.38212"
            ]
        ]
    },
    {
        "id": "2858d96f.0d7736",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "Ident Man",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "               <tem:TIdentifications>\n                  <tem:TypeId>{{payload.TypeId}}</tem:TypeId>\n                  <tem:Series>{{payload.Series}}</tem:Series>\n                  <tem:Number>{{payload.Number}}</tem:Number>\n                  <tem:Registrator>{{payload.Registrator}}</tem:Registrator>\n                  <tem:IssueDate>{{payload.IssueDate}}</tem:IssueDate>\n                  <tem:ExpirationDate>{{payload.ExpirationDate}}</tem:ExpirationDate>\n                  <tem:IsMain>false</tem:IsMain>\n                  <tem:Checked>true</tem:Checked>\n                  <tem:Status>1</tem:Status>\n               </tem:TIdentifications>\n",
        "output": "str",
        "x": 440,
        "y": 800,
        "wires": [
            [
                "b3ce5063.2e3a58"
            ]
        ]
    },
    {
        "id": "af346ec2.f506a",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "Ident Top",
        "field": "xml.in.ident_top",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "            \n            <tem:Identifications>",
        "output": "str",
        "x": 320,
        "y": 840,
        "wires": [
            [
                "304d9526.7b9702"
            ]
        ]
    },
    {
        "id": "304d9526.7b9702",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "Ident Bot",
        "field": "xml.in.ident_bot",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "            </tem:Identifications>",
        "output": "str",
        "x": 500,
        "y": 840,
        "wires": [
            [
                "61470154.da8d38"
            ]
        ]
    },
    {
        "id": "61470154.da8d38",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "Ident XML",
        "field": "xml.out.Identificatons",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{{xml.in.ident_top}}}\n{{{xml.out.ident_man}}}\n{{{xml.in.ident_bot}}}",
        "output": "str",
        "x": 690,
        "y": 840,
        "wires": [
            [
                "d3b7b87d.7a9bc"
            ]
        ]
    },
    {
        "id": "dd492c8d.38212",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "Ident Xml",
        "func": "var data = msg.payload;\nvar out = \"\";\nfor(var x of data ){\n    out += x;    \n}\nmsg.xml.out.ident_man = out;\nmsg.payload = out;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 140,
        "y": 840,
        "wires": [
            [
                "af346ec2.f506a"
            ]
        ]
    },
    {
        "id": "2a138ca4.512bac",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "ident data",
        "func": "msg.payload = msg.in.data.ident;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 140,
        "y": 800,
        "wires": [
            [
                "1b2b0f21.3fc331"
            ]
        ]
    },
    {
        "id": "1352f518.ac0343",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "Indiv Man",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "            \n            <tem:Individuals>\n               <tem:FirstName>{{payload.FirstName}}</tem:FirstName>\n               <tem:LastName>{{payload.LastName}}</tem:LastName>\n               <tem:FatherName>{{payload.FatherName}}</tem:FatherName>\n               <tem:Gender>{{payload.GENDER}}</tem:Gender>\n               <tem:BirthDay>{{payload.BirthDay}}</tem:BirthDay>\n               <tem:BirthSurname>{{payload.BirthSurname}}</tem:BirthSurname>\n               <tem:MarriageStatus>6</tem:MarriageStatus>\n               <tem:Status>1</tem:Status>\n            </tem:Individuals>",
        "output": "str",
        "x": 320,
        "y": 440,
        "wires": [
            [
                "e0095fe9.ff3a18"
            ]
        ]
    },
    {
        "id": "7e8af9a5.8982c",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "Indiv XML",
        "field": "xml.out.Individuals",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{{xml.out.indiv_man}}}",
        "output": "str",
        "x": 680,
        "y": 440,
        "wires": [
            [
                "3a220551.b254ba"
            ]
        ]
    },
    {
        "id": "e0095fe9.ff3a18",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "Indiv Xml",
        "func": "\nmsg.xml.out.indiv_man = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 440,
        "wires": [
            [
                "7e8af9a5.8982c"
            ]
        ]
    },
    {
        "id": "52306d86.07cfdc",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "indiv data",
        "func": "msg.payload = msg.in.data.indiv;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 140,
        "y": 440,
        "wires": [
            [
                "1352f518.ac0343"
            ]
        ]
    },
    {
        "id": "5f0e745f.deb34c",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "Transformator G7000",
        "func": "\nvar MODE_WORK_LOCAL = false;\nif (typeof msg != \"undefined\") MODE_WORK_LOCAL = false;\nvar MODE_DEBUG  = true;\nvar MODE_TEST = true;\n\nvar bankid_client;// = require('./bankid-cli-1.json');\n// @TODO - добавить ClientNames TNames + Тип клієнта* + Дата верифікації клієнта + Спосіб верифікації клієнта\nvar bankid_mapping;// = require('./bankid_mapping.json');\nvar bankid_dicts;// = require('./dicts_mapping.json');\nvar client_xml_data;// = require('./client_xml_data.json');\nvar client_xml_template;// = require('./client_xml_template.json');\nvar bankid_transform_web;// = require('./bankid_transform_web.json');\nvar bankid_transform_bid;// = require('./bankid_transform_bid.json');\n\nvar bankid_transform_out = {};\n\n// FUNCTIONS -----------------------------------------------\nfunction get_reftrans(refmaps, idrefcode, idvalue) {\n    var ret = idvalue;\n    for (o of refmaps[idrefcode]) {\n        //console.log(' get_reftrans'+ JSON.stringify(o));\n        if (o.bankidcode === idvalue) {\n            ret = o.webbankid;\n            break;\n        }\n    }\n    return ret;\n}\n\nfunction trans_date(date) {\n    var ret = date;\n    // from DD.MM.YYYY\n    // to 1982-05-03T00:00:00\n    if (date.length > 0) {\n        var parts = date.split('.');\n        ret = parts[2] + '-' + parts[1] + '-' + parts[0] + 'T00:00:00';\n    }\n    return ret;\n}\n\nfunction getIPNKey(data) {\n    var aMulti = [-1, 5, 7, 9, 4, 6, 10, 5, 7, 0];\n    var key = data.length;\n    if (data.length == 10) {\n        var sum = 0;\n        for (var i = 0; i < aMulti.length; i++) {\n            var o = data[i] * aMulti[i];\n            sum += o;\n        }\n    }\n    var msum = sum - (Math.trunc(sum / 11) * 11);\n    return msum < 10 ? msum : 0;\n}\n\nfunction excelDateToJSDate(serialDate) {\n    var e0date = new Date(0); // epoch \"zero\" date\n    var offset = e0date.getTimezoneOffset(); // tz offset in min\n    var dateOut = new Date(Math.round((serialDate - 25568) * 86400 * 1000));\n    return dateOut.toJSON();\n}\n\nfunction generateIPN() {\n\n    var requestAmo;\n    var requestSex;\n    var requestDat;\n    var requestKey;\n\n    requestDat = Math.floor(Math.random() * 20000) + 20000;\n    requestAmo = Math.floor(Math.random() * 100) + 100;\n    requestSex = Math.floor(Math.random() * 10 - 1) + 1;\n    requestKey = Math.floor(Math.random() * 10 - 1) + 1;\n    var dataPre = '' + requestDat + requestAmo + requestSex + requestKey;\n    var dataOk = dataPre.substr(0, 9) + getIPNKey(dataPre);\n    return dataOk;\n}\n\nfunction load_file( name ) {\n    if (MODE_WORK_LOCAL !== true) return;\n    const fs = require('fs');\n    return fs.readFileSync(name, {\n        encoding: 'utf8',\n        flag: 'r'\n    });    \n}\n\nfunction load_xml_templates_files() {\n    if (MODE_WORK_LOCAL !== true) return;\n    const fs = require('fs');\n\n    client_xml_data.top = load_file(client_xml_template.top.name);\n\n    client_xml_data.client_top = load_file(client_xml_template.client_top.name);\n    client_xml_data.client_man = load_file(client_xml_template.client_man.name);\n    client_xml_data.client_bot = load_file(client_xml_template.client_bot.name);\n    client_xml_data.indiv_top = load_file(client_xml_template.indiv_top.name);\n    client_xml_data.indiv_man = load_file(client_xml_template.indiv_man.name);\n    client_xml_data.indiv_bot = load_file(client_xml_template.indiv_bot.name);\n    client_xml_data.props_top = load_file(client_xml_template.props_top.name);\n    client_xml_data.props_man = load_file(client_xml_template.props_man.name);\n    client_xml_data.props_bot = load_file(client_xml_template.props_bot.name);\n    client_xml_data.ident_top = load_file(client_xml_template.ident_top.name);\n    client_xml_data.ident_man = load_file(client_xml_template.ident_man.name);\n    client_xml_data.ident_bot = load_file(client_xml_template.ident_bot.name);\n    client_xml_data.addre_top = load_file(client_xml_template.addre_top.name);\n    client_xml_data.addre_man = load_file(client_xml_template.addre_man.name);\n    client_xml_data.addre_bot = load_file(client_xml_template.addre_bot.name);\n    client_xml_data.commu_top = load_file(client_xml_template.commu_top.name);\n    client_xml_data.commu_man = load_file(client_xml_template.commu_man.name);\n    client_xml_data.commu_bot = load_file(client_xml_template.commu_bot.name);\n    client_xml_data.bot = load_file(client_xml_template.bot.name);\n\n    return;\n}\n\nfunction create_out_xml() {\n    if (MODE_WORK_LOCAL !== true) return;\n\n    var mustache = require(\"mustache\");\n    var view = {\n        title: \"Joe\",\n        calc: function () {\n            return 2 + 4;\n        }\n    };\n    var output = mustache.render(\"{{title}} spends {{calc}}\", view);\n    console.log(output);\n\n    const fs = require('fs');\n    fs.writeFileSync(\"client-create-bankid-3.json\", JSON.stringify(fill_data, null, 2));\n    // XML CREATE ----------------------------------------------\n    output = client_xml_data.top;\n    output += client_xml_data.client_top;\n    output += mustache.render(client_xml_data.client_man, fill_data.client);\n    output += client_xml_data.client_bot;\n    output += client_xml_data.indiv_top;\n    output += mustache.render(client_xml_data.indiv_man, fill_data.indiv);\n    output += client_xml_data.indiv_bot;\n    // documents\n    output += client_xml_data.ident_top;\n    for (prop of fill_data.ident) {\n        output += mustache.render(client_xml_data.ident_man, prop);\n    }\n    output += client_xml_data.ident_bot;\n    // addresses\n    output += client_xml_data.addre_top;\n    for (prop of fill_data.addr) {\n        output += mustache.render(client_xml_data.addre_man, prop);\n    }\n    output += client_xml_data.addre_bot;\n    // comm\n    output += client_xml_data.commu_top;\n    console.log(fill_data.comm);\n    for (prop of fill_data.comm) {\n        output += mustache.render(client_xml_data.commu_man, prop); //fill_data.comm);\n    }\n    output += client_xml_data.commu_bot;\n    // props\n    output += client_xml_data.props_top;\n    for (prop of fill_data.props) {\n        output += mustache.render(client_xml_data.props_man, prop);\n    }\n    output += client_xml_data.props_bot;\n    output += client_xml_data.bot;\n    console.log(output);\n    fs.writeFileSync(\"client-create-bankid-3.xml\", output);\n    // XML CREATE END-------------------------------------------\n}\nfunction load_requeries_files(){\n    if (MODE_WORK_LOCAL !== true) return;\n    bankid_client = require('./bankid-cli-1.json');\n    // @TODO - добавить ClientNames TNames\n    bankid_mapping = require('./bankid_mapping.json');\n    bankid_dicts = require('./dicts_mapping.json');\n    client_xml_data = require('./client_xml_data.json');\n    client_xml_template = require('./client_xml_template.json');\n    bankid_transform_web = require('./bankid_transform_web.json');\n    bankid_transform_bid = require('./bankid_transform_bid.json');\n}\n\nfunction load_transform_files(){\n    if (MODE_WORK_LOCAL === true) return;\n    bankid_client = msg.in.bankid_cli;\n    bankid_mapping = msg.transform.bankid_mapping;\n    bankid_dicts = msg.transform.dicts_mapping;\n    bankid_transform_web = msg.transform.bankid_transform_web;\n    bankid_transform_bid = msg.transform.bankid_transform_bid;\n}\nfunction create_out_nr(){\n    if (MODE_WORK_LOCAL === true) return;\n    msg.out.trans_data = fill_data;\n}\nfunction clog(msg){\n    if (MODE_DEBUG === true) \n        console.log(msg);\n}\n// FUNCTIONS END -------------------------------------------\n// MAIN INIT -----------------------------------------------\nload_requeries_files();\nload_transform_files();\nload_xml_templates_files();\nif (MODE_TEST === true)\n    bankid_client.person.inn = generateIPN();\nconsole.log(bankid_client);\n// MAIN INIT END -------------------------------------------\n// MAIN TRANSFORMATOR --------------------------------------\n// Prepare out data\nfor (k of bankid_transform_web) {\n    bankid_transform_out[k.name] = [];\n}\n\nfor (o of bankid_mapping) {\n    //console.log(o);\n    if (o.bankid.block !== 'none') {\n        var f = bankid_transform_web.find(x => x.name === o.webbank.block);\n        f.mapping.push(o);\n        var i = bankid_transform_bid.find(x => x.name === o.bankid.block);\n        i.mapping.push(o);\n    }\n}\n\n//console.log(bankid_transform_bid);\nconsole.log(bankid_transform_web);\n//console.log(bankid_transform_out);\n\n// Parsing input data\nfor (key in bankid_client) {\n\n    var webbank_block = bankid_transform_bid.find(x => x.name === key).mapping[0].webbank.block;\n    //console.log(\"1 bankid_client[key]\");\n    //console.log(JSON.stringify(bankid_client[key]));\n    //console.log(\"2 bankid_client[key]\");\n    var citem = bankid_client[key]\n    //if (citem instanceof Array) { // do not wort in nodered\n    if (Array.isArray(citem)) { \n        \n        clog(\"[\" + key + \"][\" + webbank_block + \"] Array \");\n        //console.log(bankid_transform_out[webbank_block]);\n\n        var cnt = 0;\n        var amapi = [];\n        //console.log(\" ++++++++++++[\"+webbank_block+\"][\"+key+\"] \");    \n        var mapr = bankid_transform_bid.find(x => x.name === key).mapping;\n\n        for (a of bankid_client[key]) {\n            var mapi = JSON.parse(JSON.stringify((mapr)));\n            for (o in a) {\n                clog(\"  [\" + cnt + \"][\" + key + \"] \" + o + \"=\" + a[o]);\n                console.log(\"  [\" + cnt + \"][\" + key + \"] \" + o + \"=\" + a[o]);\n                var val = mapi.find(x => x.bankid.code === o);\n                if (val !== undefined) {\n                    val.value = a[o];\n                }\n            }\n            amapi.push(mapi);\n            cnt++;\n        }\n        bankid_transform_out[webbank_block] = amapi;\n    } else {\n        clog(\"[\" + key + \"] Object\");\n        for (o in bankid_client[key]) {\n            var mapi = bankid_transform_bid.find(x => x.name === key).mapping;\n            var val = mapi.find(x => x.bankid.code === o);\n            clog(\" [\" + key + \"][\" + o + \"]\"); // val=\" + JSON.stringify(val));\n            if (val !== undefined) {\n                val.value = bankid_client[key][o];\n                console.log(\"  ++++[\" + key + \"][\" + o + \"]=\" + val.value + \"-\" + val.webbank.block);\n                //console.log(\" 00 key=\" + key + \" o=\" + o + \" val=\" + JSON.stringify(val));\n                //console.log(val);\n                bankid_transform_out[val.webbank.block].push(val);\n                // Ищем в знчения по умодчанию в для val.webbank.block\n                var mapw = bankid_transform_web.find(x => x.name === val.webbank.block).mapping;\n                for (d of mapw) {\n                    if (d.bankid.code === o && d.webbank.default !== '') {\n                        var vald = JSON.parse(JSON.stringify(val));\n                        vald.value = d.webbank.default;\n                        vald.webbank.code = d.webbank.code;\n                        bankid_transform_out[val.webbank.block].push(vald);\n                    }\n                }\n            }\n        }\n    }\n}\n// Calculate field from bankid\nvar calcm = bankid_transform_bid.find(x => x.name === 'calculate').mapping;\n\nfor (item of calcm) {\n    console.log(item); // x.name === a.source !!!! persons\n    var bankid_src = bankid_transform_bid.find(x => x.name === 'person').mapping;\n    console.log(\"bankid_src --------------------------------------------\");\n    console.log(bankid_src);\n\n    var fields = item.bankid.code.split('+');\n    var calculate = \"\";\n    for (f of fields) {\n        var n = bankid_src.find(x => x.bankid.block === 'person' && x.bankid.code === f)\n        //console.log(\"  bankid_fld \"+f+\" \"+n.value + JSON.stringify(n));\n        calculate += n.value + \" \";\n        calculate = calculate;\n    }\n    item.value = calculate.trimRight();\n    var wkey = item.webbank.block;\n    var wfld = item.webbank.code;\n\n    var wblock = bankid_transform_out[wkey];\n    wblock.push(item);\n    wblock = bankid_transform_out[wkey];\n}\n\nconsole.log(\"bankid_transform_out --------------------------------------------\");\nvar fill_data = {};\n// Клиент\nfill_data.client = {};\nfor (item of bankid_transform_out.Client) {\n    if (item.bankid.maps !== undefined && item.bankid.maps !== \"\") {\n        console.log(item.bankid.maps);\n        fill_data.client[item.webbank.code] =\n            get_reftrans(bankid_dicts, item.bankid.maps, item.value);\n    } else\n        fill_data.client[item.webbank.code] = item.value;\n}\n// Персональные данные\nfill_data.indiv = {};\nfor (item of bankid_transform_out.Individuals) {\n    var value = item.value;\n    console.log(item);\n    if (item.bankid.maps !== undefined && item.bankid.maps !== '')\n        value = get_reftrans(bankid_dicts, item.bankid.maps, item.value);\n    if (item.bankid.type === 'date')\n        value = trans_date(value);\n    fill_data.indiv[item.webbank.code] = value;\n}\n\nvar i = 0;\n// Документы\nfill_data.ident = [];\n\nconsole.log('------------ bankid_transform_out.Identifications');\nconsole.log(bankid_transform_out.Identifications);\nconsole.log('------------ bankid_transform_out.Identifications');\n\nfor (item of bankid_transform_out.Identifications) {\n    fill_data.ident[i] = {};\n    for (o of item) {\n        var code = o.webbank.code;\n        var value = o.value;\n        if (o.bankid.type === 'date')\n            value = trans_date(value);\n        if (o.bankid.maps !== undefined && o.bankid.maps.length > 0) {\n            value = get_reftrans(bankid_dicts, o.bankid.maps, value);\n        }\n        fill_data.ident[i][code] = value;\n        if (fill_data.ident[i]['ExpirationDate'] === '') {\n            fill_data.ident[i]['ExpirationDate'] = '2099-01-01T00:00:00';\n        };\n    }\n    i++;\n}\n// Адреса\nconsole.log(bankid_transform_out.Addresses);\ni = 0;\nfill_data.addr = [];\nfor (item of bankid_transform_out.Addresses) {\n    fill_data.addr[i] = {};\n    for (o of item) {\n        var code = o.webbank.code;\n        var value = o.value;\n        if (o.bankid.type === 'date')\n            value = trans_date(value);\n        if (o.bankid.maps !== undefined && o.bankid.maps.length > 0) {\n            value = get_reftrans(bankid_dicts, o.bankid.maps, value);\n        }\n        fill_data.addr[i][code] = value;\n    }\n    i++;\n}\n// явки пароли телефоны\ni = 0;\nfill_data.comm = [];\nvar comm_codes = [];\nfor (item of bankid_transform_out.Communications) {\n    console.log(item);\n    if (comm_codes.indexOf(item.bankid.code) < 0)\n        comm_codes.push(item.bankid.code);\n}\nconsole.log(comm_codes);\nfor (c of comm_codes) {\n    fill_data.comm[i] = {};\n    console.log(c);\n    for (item of bankid_transform_out.Communications) {\n        var code = item.webbank.code;\n        if (item.bankid.code === c) {\n            console.log('[' + c + '][' + code + '][' + item.value + ']');\n            fill_data.comm[i][code] = item.value;\n        }\n    }\n    i++;\n}\n// Реквизиты\nfill_data.props = [];\ni = 0;\nfor (item of bankid_transform_out.Properties) {\n    if (item.webbank.code !== '') {\n        fill_data.props[i] = {};\n        fill_data.props[i].Refs = item.bankid.maps;\n        fill_data.props[i].Code = item.webbank.code;\n        fill_data.props[i].Dict = item.webbank.dict;\n        fill_data.props[i].Value = item.value;\n\n        if (item.bankid.maps !== undefined && item.bankid.maps.length > 0) {\n            fill_data.props[i].Value =\n                get_reftrans(bankid_dicts, item.bankid.maps, item.value);\n        }\n\n        i++;\n    }\n}\n// MAIN TRANSFORMATOR END-----------------------------------\n\nconsole.log(\"fill_data --------------------------------------------\");\nconsole.log(fill_data);\nconsole.log(\"fill_data --------------------------------------------\");\n\ncreate_out_xml();\ncreate_out_nr();\nif (MODE_WORK_LOCAL !== true) return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 260,
        "wires": [
            [
                "2ab299a9.cbb38e"
            ]
        ]
    },
    {
        "id": "51f35b7e.60d084",
        "type": "inject",
        "z": "56ce2849.3c576",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 460,
        "y": 80,
        "wires": [
            [
                "13278a2b.a4764e"
            ]
        ]
    },
    {
        "id": "a35e36cb.c4af68",
        "type": "debug",
        "z": "56ce2849.3c576",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 690,
        "y": 260,
        "wires": []
    },
    {
        "id": "13278a2b.a4764e",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "in.bankid_cli",
        "field": "in.bankid_cli",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"person\": {\n        \"type\": \"physical\",\n        \"lastName\": \"Кетцалькоатль\",\n        \"firstName\": \"Кукумац\",\n        \"middleName\": \"Кукулькан\",\n        \"inn\": \"3347780927\",\n        \"birthDay\": \"28.08.1991\",\n        \"sex\": \"M\",\n        \"phone\": \"380631003256\",\n        \"email\": \"sava@mail.dot.com\",\n        \"web\": \"www.www.net\",\n        \"uaResident\": \"1\",\n        \"flagPersonTerror\": \"1\",\n        \"edication\": \"Бог\"\n    },\n\n    \"extends\": {\n        \"country_citizen\": \"804\",\n        \"marital_status\": \"6\",\n        \"work_info\": \"безроботный\",\n        \"birth_country\": \"804\",\n        \"birth_place\": \"Бердичув\",\n        \"profit_way\": \"2\"\n    },\n\n    \"addresses\": [{\n            \"type\": \"factual\",\n            \"country\": \"UA\",\n            \"state\": \"Київська\",\n            \"area\": \"Київ\",\n            \"city\": \"м. Київ\",\n            \"street\": \"вул. Бородинского побоища\",\n            \"houseNo\": \"21\",\n            \"flatNo\": \"16\"\n        },\n        {\n            \"type\": \"juridical\",\n            \"country\": \"UA\",\n            \"state\": \"Київська\",\n            \"area\": \"Київ\",\n            \"city\": \"м. Чичен-Ица\",\n            \"street\": \"вул. пирамида Кукулькана.\",\n            \"houseNo\": \"1\",\n            \"flatNo\": \"1\"\n        }\n    ],\n    \"documents\": [{\n            \"type\": \"passport\",\n            \"typeName\": \"Паспорт\",\n            \"series\": \"СН\",\n            \"number\": \"432311\",\n            \"issue\": \"Святошинське РУ ГУ МВС у м.Києві\",\n            \"dateIssue\": \"01.10.1997\",\n            \"dateExpiration\": \"\",\n            \"issueCountryIso2\": \"UA\"\n        },\n        {\n            \"type\": \"idpassport\",\n            \"typeName\": \"Паспорт картка\",\n            \"series\": \"\",\n            \"number\": \"3425654326\",\n            \"issue\": \"1456\",\n            \"dateIssue\": \"01.10.2020\",\n            \"dateExpiration\": \"01.10.2040\",\n            \"issueCountryIso2\": \"UA\"\n        }\n    ],\n    \"scans\": [{\n            \"type\": \"passport\",\n            \"scanFile\": \"BASE64\",\n            \"dateCreate\": \"dd.mm.yyyy\",\n            \"extension\": \"jpg\"\n\n        },\n        {\n            \"type\": \"photo\",\n            \"scanFile\": \"BASE64\",\n            \"dateCreate\": \"dd.mm.yyyy\",\n            \"extension\": \"jpg\"\n\n        }\n    ]\n}",
        "output": "json",
        "x": 610,
        "y": 80,
        "wires": [
            [
                "195186f4.01cf49"
            ]
        ]
    },
    {
        "id": "195186f4.01cf49",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "transform.bankid_mapping",
        "field": "transform.bankid_mapping",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "[\n  {\n    \"bankid\": {\n      \"block\": \"person\",\n      \"source\": \"\",\n      \"code\": \"lastName\",\n      \"maps\": \"\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Individuals\",\n      \"code\": \"LastName\",\n      \"type\": \"string\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"true\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"person\",\n      \"source\": \"\",\n      \"code\": \"firstName\",\n      \"maps\": \"\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Individuals\",\n      \"code\": \"FirstName\",\n      \"type\": \"string\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"true\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"person\",\n      \"source\": \"\",\n      \"code\": \"middleName\",\n      \"maps\": \"\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Individuals\",\n      \"code\": \"FatherName\",\n      \"type\": \"string\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"true\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"calculate\",\n      \"source\": \"person\",\n      \"code\": \"lastName+firstName+middleName\",\n      \"maps\": \"\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Client\",\n      \"code\": \"Name\",\n      \"type\": \"string\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"true\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"person\",\n      \"source\": \"\",\n      \"code\": \"inn\",\n      \"maps\": \"\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Client\",\n      \"code\": \"StateCode\",\n      \"type\": \"string\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"true\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"extends\",\n      \"source\": \"\",\n      \"code\": \"country_citizen\",\n      \"maps\": \"\",\n      \"type\": \"int\"\n    },\n    \"webbank\": {\n      \"block\": \"Properties\",\n      \"code\": \"FATF_COUNTRY_CITIZEN\",\n      \"type\": \"string\",\n      \"default\": \"\",\n      \"dict\": \"KL_K040.DBF\",\n      \"isneed\": \"true\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"extends\",\n      \"source\": \"\",\n      \"code\": \"marital_status\",\n      \"maps\": \"\",\n      \"type\": \"int\"\n    },\n    \"webbank\": {\n      \"block\": \"Individuals\",\n      \"code\": \"MarriageStatus\",\n      \"type\": \"int\",\n      \"default\": \"\",\n      \"dict\": \"D08\",\n      \"isneed\": \"true\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"person\",\n      \"source\": \"\",\n      \"code\": \"sex\",\n      \"maps\": \"sex\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Individuals\",\n      \"code\": \"GENDER\",\n      \"type\": \"int\",\n      \"default\": \"\",\n      \"dict\": \"D06\",\n      \"isneed\": \"true\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"person\",\n      \"source\": \"\",\n      \"code\": \"sex\",\n      \"maps\": \"\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Properties\",\n      \"code\": \"GENDER\",\n      \"type\": \"int\",\n      \"default\": \"\",\n      \"dict\": \"D06\",\n      \"isneed\": \"true\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"person\",\n      \"source\": \"\",\n      \"code\": \"birthDay\",\n      \"maps\": \"\",\n      \"type\": \"date\"\n    },\n    \"webbank\": {\n      \"block\": \"Individuals\",\n      \"code\": \"BirthDay\",\n      \"type\": \"date\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"true\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"person\",\n      \"source\": \"\",\n      \"code\": \"uaResident\",\n      \"maps\": \"resident\",\n      \"type\": \"int\"\n    },\n    \"webbank\": {\n      \"block\": \"Client\",\n      \"code\": \"Residency\",\n      \"type\": \"int\",\n      \"default\": \"\",\n      \"dict\": \"KL_K030.DBF\",\n      \"isneed\": \"true\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"documents\",\n      \"source\": \"\",\n      \"code\": \"type\",\n      \"maps\": \"documents\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Identifications\",\n      \"code\": \"TypeId\",\n      \"type\": \"int\",\n      \"default\": \"\",\n      \"dict\": \"cfIdentificationTypes\",\n      \"isneed\": \"true\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"documents\",\n      \"source\": \"\",\n      \"code\": \"series\",\n      \"maps\": \"\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Identifications\",\n      \"code\": \"Series\",\n      \"type\": \"string\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"true\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"documents\",\n      \"source\": \"\",\n      \"code\": \"number\",\n      \"maps\": \"\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Identifications\",\n      \"code\": \"Number\",\n      \"type\": \"string\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"true\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"documents\",\n      \"source\": \"\",\n      \"code\": \"issue\",\n      \"maps\": \"\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Identifications\",\n      \"code\": \"Registrator\",\n      \"type\": \"string\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"true\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"documents\",\n      \"source\": \"\",\n      \"code\": \"dateIssue\",\n      \"maps\": \"\",\n      \"type\": \"date\"\n    },\n    \"webbank\": {\n      \"block\": \"Identifications\",\n      \"code\": \"IssueDate\",\n      \"type\": \"date\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"true\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"documents\",\n      \"source\": \"\",\n      \"code\": \"dateExpiration\",\n      \"maps\": \"\",\n      \"type\": \"date\"\n    },\n    \"webbank\": {\n      \"block\": \"Identifications\",\n      \"code\": \"ExpirationDate\",\n      \"type\": \"date\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"true\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"documents\",\n      \"source\": \"\",\n      \"code\": \"issueCountryIso2\",\n      \"maps\": \"\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Identifications\",\n      \"code\": \"CountryCode\",\n      \"type\": \"string\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"true\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"none\",\n      \"source\": \"\",\n      \"code\": \"none\",\n      \"maps\": \"\",\n      \"type\": \"none\"\n    },\n    \"webbank\": {\n      \"block\": \"Identifications\",\n      \"code\": \"Checked\",\n      \"type\": \"int\",\n      \"default\": \"0\",\n      \"dict\": \"\",\n      \"isneed\": \"true\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"none\",\n      \"source\": \"\",\n      \"code\": \"none\",\n      \"maps\": \"\",\n      \"type\": \"none\"\n    },\n    \"webbank\": {\n      \"block\": \"Identifications\",\n      \"code\": \"IsMain\",\n      \"type\": \"int\",\n      \"default\": \"0\",\n      \"dict\": \"\",\n      \"isneed\": \"true\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"addresses\",\n      \"source\": \"\",\n      \"code\": \"type\",\n      \"maps\": \"addresses\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Addresses\",\n      \"code\": \"TypeCode\",\n      \"type\": \"int\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"true\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"addresses\",\n      \"source\": \"\",\n      \"code\": \"country\",\n      \"maps\": \"\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Addresses\",\n      \"code\": \"Country\",\n      \"type\": \"int\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"true\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"addresses\",\n      \"source\": \"\",\n      \"code\": \"state\",\n      \"maps\": \"\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Addresses\",\n      \"code\": \"State\",\n      \"type\": \"string\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"true\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"addresses\",\n      \"source\": \"\",\n      \"code\": \"area\",\n      \"maps\": \"\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Addresses\",\n      \"code\": \"Region\",\n      \"type\": \"string\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"true\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"addresses\",\n      \"source\": \"\",\n      \"code\": \"city\",\n      \"maps\": \"\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Addresses\",\n      \"code\": \"Town\",\n      \"type\": \"string\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"true\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"addresses\",\n      \"source\": \"\",\n      \"code\": \"street\",\n      \"maps\": \"\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Addresses\",\n      \"code\": \"Street\",\n      \"type\": \"string\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"true\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"addresses\",\n      \"source\": \"\",\n      \"code\": \"houseNo\",\n      \"maps\": \"\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Addresses\",\n      \"code\": \"HouseNumber\",\n      \"type\": \"string\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"true\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"addresses\",\n      \"source\": \"\",\n      \"code\": \"flatNo\",\n      \"maps\": \"\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Addresses\",\n      \"code\": \"FlatNumber\",\n      \"type\": \"string\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"true\"\n    }\n  },\n  \n  {\n    \"bankid\": {\n      \"block\": \"person\",\n      \"source\": \"\",\n      \"code\": \"socStatus\",\n      \"maps\": \"\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Properties\",\n      \"code\": \"\",\n      \"type\": \"int\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"person\",\n      \"source\": \"\",\n      \"code\": \"flagPEPs\",\n      \"maps\": \"\",\n      \"type\": \"int\"\n    },\n    \"webbank\": {\n      \"block\": \"Properties\",\n      \"code\": \"\",\n      \"type\": \"int\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"person\",\n      \"source\": \"\",\n      \"code\": \"flagPersonTerror\",\n      \"maps\": \"terrorist\",\n      \"type\": \"int\"\n    },\n    \"webbank\": {\n      \"block\": \"Properties\",\n      \"code\": \"CL_FATF_CHECK_RESULT\",\n      \"type\": \"string\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"person\",\n      \"source\": \"\",\n      \"code\": \"flagRestriction\",\n      \"maps\": \"\",\n      \"type\": \"int\"\n    },\n    \"webbank\": {\n      \"block\": \"Properties\",\n      \"code\": \"\",\n      \"type\": \"int\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"person\",\n      \"source\": \"\",\n      \"code\": \"flagTopLevelRisk\",\n      \"maps\": \"\",\n      \"type\": \"int\"\n    },\n    \"webbank\": {\n      \"block\": \"Properties\",\n      \"code\": \"\",\n      \"type\": \"int\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"scans\",\n      \"source\": \"\",\n      \"code\": \"type\",\n      \"maps\": \"\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Scans\",\n      \"code\": \"name\",\n      \"type\": \"string\",\n      \"default\": \"\",\n      \"dict\": \"scans\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"scans\",\n      \"source\": \"\",\n      \"code\": \"scanFile\",\n      \"maps\": \"\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Scans\",\n      \"code\": \"content\",\n      \"type\": \"string\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"scans\",\n      \"source\": \"\",\n      \"code\": \"dateCreate\",\n      \"maps\": \"\",\n      \"type\": \"date\"\n    },\n    \"webbank\": {\n      \"block\": \"Scans\",\n      \"code\": \"tmestamp\",\n      \"type\": \"dete\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"scans\",\n      \"source\": \"\",\n      \"code\": \"extension\",\n      \"maps\": \"\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Scans\",\n      \"code\": \"comment\",\n      \"type\": \"string\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"extends\",\n      \"source\": \"\",\n      \"code\": \"work_info\",\n      \"maps\": \"\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Properties\",\n      \"code\": \"\",\n      \"type\": \"\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"person\",\n      \"source\": \"\",\n      \"code\": \"phone\",\n      \"maps\": \"\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Communications\",\n      \"code\": \"Value\",\n      \"type\": \"string\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"person\",\n      \"source\": \"\",\n      \"code\": \"phone\",\n      \"maps\": \"\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Communications\",\n      \"code\": \"TypeId\",\n      \"type\": \"string\",\n      \"default\": \"3\",\n      \"dict\": \"\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"person\",\n      \"source\": \"\",\n      \"code\": \"email\",\n      \"maps\": \"\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Communications\",\n      \"code\": \"Value\",\n      \"type\": \"string\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"person\",\n      \"source\": \"\",\n      \"code\": \"email\",\n      \"maps\": \"\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Communications\",\n      \"code\": \"TypeId\",\n      \"type\": \"string\",\n      \"default\": \"5\",\n      \"dict\": \"\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"person\",\n      \"source\": \"\",\n      \"code\": \"web\",\n      \"maps\": \"\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Communications\",\n      \"code\": \"Value\",\n      \"type\": \"string\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"person\",\n      \"source\": \"\",\n      \"code\": \"web\",\n      \"maps\": \"\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Communications\",\n      \"code\": \"TypeId\",\n      \"type\": \"string\",\n      \"default\": \"6\",\n      \"dict\": \"\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"extends\",\n      \"source\": \"\",\n      \"code\": \"birth_country\",\n      \"maps\": \"\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Properties\",\n      \"code\": \"BIRTH_COUNTRY\",\n      \"type\": \"int\",\n      \"default\": \"\",\n      \"dict\": \"KL_K040.DBF\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"extends\",\n      \"source\": \"\",\n      \"code\": \"birth_place\",\n      \"maps\": \"\",\n      \"type\": \"string\"\n    },\n    \"webbank\": {\n      \"block\": \"Properties\",\n      \"code\": \"BIRTH_PLACE\",\n      \"type\": \"string\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"extends\",\n      \"source\": \"\",\n      \"code\": \"profit_way\",\n      \"maps\": \"\",\n      \"type\": \"int\"\n    },\n    \"webbank\": {\n      \"block\": \"Properties\",\n      \"code\": \"PROFIT_WAY\",\n      \"type\": \"int\",\n      \"default\": \"\",\n      \"dict\": \"PROFIT_WAY\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"extends\",\n      \"source\": \"\",\n      \"code\": \"profit_src\",\n      \"maps\": \"\",\n      \"type\": \"int\"\n    },\n    \"webbank\": {\n      \"block\": \"Properties\",\n      \"code\": \"BANK_PRODUCT\",\n      \"type\": \"int\",\n      \"default\": \"\",\n      \"dict\": \"FIN_DOCH\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"extends\",\n      \"source\": \"\",\n      \"code\": \"obsyag_nad\",\n      \"maps\": \"\",\n      \"type\": \"int\"\n    },\n    \"webbank\": {\n      \"block\": \"Properties\",\n      \"code\": \"OBSYAG_NAD\",\n      \"type\": \"int\",\n      \"default\": \"\",\n      \"dict\": \"OBSYAG_NAD_1\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"extends\",\n      \"source\": \"\",\n      \"code\": \"nad_k_3\",\n      \"maps\": \"\",\n      \"type\": \"int\"\n    },\n    \"webbank\": {\n      \"block\": \"Properties\",\n      \"code\": \"NAD_K_3\",\n      \"type\": \"int\",\n      \"default\": \"\",\n      \"dict\": \"NAD_K_3\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"extends\",\n      \"source\": \"\",\n      \"code\": \"monthsumm\",\n      \"maps\": \"\",\n      \"type\": \"int\"\n    },\n    \"webbank\": {\n      \"block\": \"Properties\",\n      \"code\": \"MONTHSUMM\",\n      \"type\": \"int\",\n      \"default\": \"\",\n      \"dict\": \"SUMA_DOHOD\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"extends\",\n      \"source\": \"\",\n      \"code\": \"propetyth_of_client\",\n      \"maps\": \"\",\n      \"type\": \"int\"\n    },\n    \"webbank\": {\n      \"block\": \"Properties\",\n      \"code\": \"PROPETYTH_OF_CLIENT\",\n      \"type\": \"int\",\n      \"default\": \"\",\n      \"dict\": \"PROPETYTH_OF_CLIENT\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"extends\",\n      \"source\": \"\",\n      \"code\": \"propetyth_of_client_avto\",\n      \"maps\": \"\",\n      \"type\": \"int\"\n    },\n    \"webbank\": {\n      \"block\": \"Properties\",\n      \"code\": \"PROPETYTH_OF_CLIENT_AVTO\",\n      \"type\": \"int\",\n      \"default\": \"\",\n      \"dict\": \"PROPETYTH_OF_CLIENT_AVTO\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"extends\",\n      \"source\": \"\",\n      \"code\": \"info_outer_acc_sel\",\n      \"maps\": \"\",\n      \"type\": \"int\"\n    },\n    \"webbank\": {\n      \"block\": \"Properties\",\n      \"code\": \"INFO_OUTER_ACC_SEL\",\n      \"type\": \"int\",\n      \"default\": \"\",\n      \"dict\": \"INFO_OUTER_ACC\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"extends\",\n      \"source\": \"\",\n      \"code\": \"exists_cred_out\",\n      \"maps\": \"\",\n      \"type\": \"int\"\n    },\n    \"webbank\": {\n      \"block\": \"Properties\",\n      \"code\": \"EXISTS_CRED_OUT\",\n      \"type\": \"int\",\n      \"default\": \"\",\n      \"dict\": \"YESNO\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"extends\",\n      \"source\": \"\",\n      \"code\": \"exists_depo_out\",\n      \"maps\": \"\",\n      \"type\": \"int\"\n    },\n    \"webbank\": {\n      \"block\": \"Properties\",\n      \"code\": \"EXISTS_DEPO_OUT\",\n      \"type\": \"int\",\n      \"default\": \"\",\n      \"dict\": \"YESNO\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"extends\",\n      \"source\": \"\",\n      \"code\": \"propetypap_of_clientype\",\n      \"maps\": \"\",\n      \"type\": \"int\"\n    },\n    \"webbank\": {\n      \"block\": \"Properties\",\n      \"code\": \"PROPETYPAP_OF_CLIENTYPE\",\n      \"type\": \"int\",\n      \"default\": \"\",\n      \"dict\": \"PROPETYPAP_OF_CLIENTYPE\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"extends\",\n      \"source\": \"\",\n      \"code\": \"bank_services_manual\",\n      \"maps\": \"\",\n      \"type\": \"int\"\n    },\n    \"webbank\": {\n      \"block\": \"Properties\",\n      \"code\": \"BANK_SERVICES_MANUAL\",\n      \"type\": \"int\",\n      \"default\": \"\",\n      \"dict\": \"BANK_SERVICES_MANUAL\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"extends\",\n      \"source\": \"\",\n      \"code\": \"ugb_tcurelpers\",\n      \"maps\": \"\",\n      \"type\": \"int\"\n    },\n    \"webbank\": {\n      \"block\": \"Properties\",\n      \"code\": \"UGB_TCURelPers\",\n      \"type\": \"int\",\n      \"default\": \"\",\n      \"dict\": \"RF_UGB_TCURelPers\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"extends\",\n      \"source\": \"\",\n      \"code\": \"public_person_exists\",\n      \"maps\": \"\",\n      \"type\": \"int\"\n    },\n    \"webbank\": {\n      \"block\": \"Properties\",\n      \"code\": \"PUBLIC_PERSON_EXISTS\",\n      \"type\": \"int\",\n      \"default\": \"\",\n      \"dict\": \"PUBLIC_PERSON_EXISTS\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"extends\",\n      \"source\": \"\",\n      \"code\": \"public_data_fact\",\n      \"maps\": \"\",\n      \"type\": \"date\"\n    },\n    \"webbank\": {\n      \"block\": \"Properties\",\n      \"code\": \"PUBLIC_DATA_FACT\",\n      \"type\": \"date\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"extends\",\n      \"source\": \"\",\n      \"code\": \"public_data_permission\",\n      \"maps\": \"\",\n      \"type\": \"date\"\n    },\n    \"webbank\": {\n      \"block\": \"Properties\",\n      \"code\": \"PUBLIC_DATA_PERMISSION\",\n      \"type\": \"date\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"extends\",\n      \"source\": \"\",\n      \"code\": \"public_data_risk\",\n      \"maps\": \"\",\n      \"type\": \"date\"\n    },\n    \"webbank\": {\n      \"block\": \"Properties\",\n      \"code\": \"PUBLIC_DATA_RISK\",\n      \"type\": \"date\",\n      \"default\": \"\",\n      \"dict\": \"\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"extends\",\n      \"source\": \"\",\n      \"code\": \"data_zax_per\",\n      \"maps\": \"\",\n      \"type\": \"operation\"\n    },\n    \"webbank\": {\n      \"block\": \"Operations\",\n      \"code\": \"DATA_ZAX_PER\",\n      \"type\": \"operation\",\n      \"default\": \"\",\n      \"dict\": \"operation\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"extends\",\n      \"source\": \"\",\n      \"code\": \"kl_k013fo\",\n      \"maps\": \"\",\n      \"type\": \"int\"\n    },\n    \"webbank\": {\n      \"block\": \"Properties\",\n      \"code\": \"KL_K013FO\",\n      \"type\": \"int\",\n      \"default\": \"\",\n      \"dict\": \"KL_K013_FO\",\n      \"isneed\": \"\"\n    }\n  },\n  {\n    \"bankid\": {\n      \"block\": \"extends\",\n      \"source\": \"\",\n      \"code\": \"usa_chiisares\",\n      \"maps\": \"\",\n      \"type\": \"int\"\n    },\n    \"webbank\": {\n      \"block\": \"Properties\",\n      \"code\": \"Chiisaresident_USA\",\n      \"type\": \"int\",\n      \"default\": \"\",\n      \"dict\": \"YESNO\",\n      \"isneed\": \"\"\n    }\n  }\n]\n",
        "output": "json",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "1c1d7c81.345533"
            ]
        ]
    },
    {
        "id": "1c1d7c81.345533",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "transform.dicts_mapping",
        "field": "transform.dicts_mapping",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"resident\": [\n        {\n            \"bankidcode\": \"1\",\n            \"bankidname\": \"uaResident\",\n            \"bankiddesc\": \"Резидент\",            \n            \"webbankid\": \"1\",\n            \"webbankcode\": \"1\",\n            \"webbankdesc\": \"Резидент\"\n        },\n        {\n            \"bankidcode\": \"0\",\n            \"bankidname\": \"uaResident\",\n            \"bankiddesc\": \"Не Резидент\",\n            \"webbankid\": \"2\",\n            \"webbankcode\": \"2\",\n            \"webbankdesc\": \"Не Резидент\"\n        }\n    ],\n    \"terrorist\": [\n        {\n            \"bankidcode\": \"1\",\n            \"bankidname\": \"flagPersonTerror\",\n            \"bankiddesc\": \"Terrorist\",            \n            \"webbankid\": \"Клиент являестя террористом соглано данных bankid\",\n            \"webbankcode\": \"Клиент являестя террористом соглано данных bankid\",\n            \"webbankdesc\": \"Terrorist\"\n        },\n        {\n            \"bankidcode\": \"0\",\n            \"bankidname\": \"flagPersonTerror\",\n            \"bankiddesc\": \"Не Terrorist\",\n            \"webbankid\": \"Клиент НЕ являестя террористом соглано данных bankid\",\n            \"webbankcode\": \"Клиент НЕ являестя террористом соглано данных bankid\",\n            \"webbankdesc\": \"Не Terrorist\"\n        }\n    ],\n    \"sex\": [\n        {\n            \"bankidcode\": \"M\",\n            \"bankidname\": \"Man\",\n            \"bankiddesc\": \"Чоловіча\",            \n            \"webbankid\": \"1\",\n            \"webbankcode\": \"1\",\n            \"webbankdesc\": \"Чоловіча\"\n        },\n        {\n            \"bankidcode\": \"F\",\n            \"bankidname\": \"Woman\",\n            \"bankiddesc\": \"Жіноча\",\n            \"webbankid\": \"2\",\n            \"webbankcode\": \"2\",\n            \"webbankdesc\": \"Жіноча\"\n        }\n    ],\n    \"addresses\": [\n        {\n            \"bankidcode\": \"factual\",\n            \"bankidname\": \"проживання\",\n            \"bankiddesc\": \"Адрес проживання\",\n            \"webbankid\": \"2\",\n            \"webbankcode\": \"2\",\n            \"webbankdesc\": \"Фактична адреса\"\n        },\n        {\n            \"bankidcode\": \"juridical\",\n            \"bankidname\": \"реєстрації\",\n            \"bankiddesc\": \"Адрес реєстрації\",\n            \"webbankid\": \"1\",\n            \"webbankcode\": \"1\",\n            \"webbankdesc\": \"Адреса постійного місця проживання або регістрації\"\n        }\n    ],\n    \"documents\": [\n        {\n            \"bankidcode\": \"passport\",\n            \"bankidname\": \"паспорт\",\n            \"bankiddesc\": \"\",\n            \"webbankid\": \"4\",\n            \"webbankcode\": \"4\",\n            \"webbankdesc\": \"Паспорт громадянина України\"\n        },\n        {\n            \"bankidcode\": \"idpassport\",\n            \"bankidname\": \"паспорт\",\n            \"bankiddesc\": \"\",\n            \"webbankid\": \"55\",\n            \"webbankcode\": \"404\",\n            \"webbankdesc\": \"Паспорт (Id-карта)\"\n        },\n        {\n            \"bankidcode\": \"zpassport\",\n            \"bankidname\": \"закордонний\",\n            \"bankiddesc\": \"\",\n            \"webbankid\": \"24\",\n            \"webbankcode\": \"42\",\n            \"webbankdesc\": \"Паспорт громадянина України для виїзду за кордон\"\n        },\n        {\n            \"bankidcode\": \"ident\",\n            \"bankidname\": \"посвідчення особи у відповідності до вимог законодавства України\",\n            \"bankiddesc\": \"\",\n            \"webbankid\": \"29\",\n            \"webbankcode\": \"48\",\n            \"webbankdesc\": \"Інші документи, які видаються уповноваженими державними органами і за якими є можливість здійснення однозначної ідентифікації особи\"\n        }\n    ],\n    \"scans\": [\n        {\n            \"bankidcode\": \"passport\",\n            \"bankidname\": \"паспорт України\",\n            \"bankiddesc\": \"\",\n            \"webbankid\": \"109\",\n            \"webbankcode\": \"109\",           \n            \"webbankdesc\": \"Паспорт громадянина України\"\n        },\n        {\n            \"bankidcode\": \"idpassport\",\n            \"bankidname\": \"id - картка\",\n            \"bankiddesc\": \"\",\n            \"webbankid\": \"109\",\n            \"webbankcode\": \"109\",   \n            \"webbankdesc\": \"Паспорт (Id-карта)\"\n        },\n        {\n            \"bankidcode\": \"zpassport\",\n            \"bankidname\": \"закордонний\",\n            \"bankiddesc\": \"\",\n            \"webbankid\": \"109\",\n            \"webbankcode\": \"109\",   \n            \"webbankdesc\": \"Паспорт громадянина України для виїзду за кордон\"\n        },\n        {\n            \"bankidcode\": \"inn\",\n            \"bankidname\": \"реєстраційний номер облікової картки платника податків\",\n            \"bankiddesc\": \"\",\n            \"webbankid\": \"109\",\n            \"webbankcode\": \"109\",   \n            \"webbankdesc\": \"реєстраційний номер облікової картки платника податків\"\n        },\n        {\n            \"bankidcode\": \"personalPhoto\",\n            \"bankidname\": \"фото особи(анфас)\",\n            \"bankiddesc\": \"\",\n            \"webbankid\": \"109\",\n            \"webbankcode\": \"109\",   \n            \"webbankdesc\": \"фото особи(анфас)\"\n        }\n    ]\n}",
        "output": "json",
        "x": 570,
        "y": 120,
        "wires": [
            [
                "7dc30e76.b578f"
            ]
        ]
    },
    {
        "id": "7dc30e76.b578f",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "transform.bankid_transform_web",
        "field": "transform.bankid_transform_web",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "[{\n    \"name\": \"Client\",\n    \"isarray\": false,\n    \"mapping\": []\n},\n{\n    \"name\": \"Individuals\",\n    \"isarray\": false,\n    \"mapping\": [],\n    \"comment\" : \"array\"\n}, \n{\n    \"name\": \"Identifications\",\n    \"isarray\": true,\n    \"mapping\": [],\n    \"comment\" : \"array documents\"\n}, \n{\n    \"name\": \"Addresses\",\n    \"isarray\": true,\n    \"mapping\": [],\n    \"comment\" : \"array\"\n}, \n{\n    \"name\": \"Communications\",\n    \"isarray\": true,\n    \"mapping\": []\n},\n{\n    \"name\": \"Properties\",\n    \"isarray\": false,\n    \"mapping\": []\n},\n{\n    \"name\": \"Scans\",\n    \"isarray\": true,\n    \"mapping\": [],\n    \"comment\" : \"array\"\n}, \n{\n    \"name\": \"Operations\",\n    \"isarray\": false,\n    \"mapping\": []\n}\n]",
        "output": "json",
        "x": 180,
        "y": 160,
        "wires": [
            [
                "21aa3f07.d083a"
            ]
        ]
    },
    {
        "id": "21aa3f07.d083a",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "transform.bankid_transform_bid",
        "field": "transform.bankid_transform_bid",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "[{\n    \"name\": \"person\",\n    \"isarray\": false,\n    \"mapping\": []\n},\n{\n    \"name\": \"addresses\",\n    \"isarray\": true,\n    \"mapping\": []\n},\n{\n    \"name\": \"documents\",\n    \"isarray\": true,\n    \"mapping\": []\n},\n{\n    \"name\": \"scans\",\n    \"isarray\": true,\n    \"mapping\": []\n},\n{\n    \"name\": \"extends\",\n    \"isarray\": true,\n    \"mapping\": []\n},\n{\n    \"name\": \"calculate\",\n    \"isarray\": false,\n    \"mapping\": []\n}\n]",
        "output": "json",
        "x": 550,
        "y": 160,
        "wires": [
            [
                "5f0e745f.deb34c"
            ]
        ]
    },
    {
        "id": "2008fca9.47e02c",
        "type": "http in",
        "z": "56ce2849.3c576",
        "name": "",
        "url": "/clients/bankid/client",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 40,
        "wires": [
            [
                "a1aad6a9.afbb"
            ]
        ]
    },
    {
        "id": "77b69276.a93cb4",
        "type": "http response",
        "z": "56ce2849.3c576",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 690,
        "y": 1380,
        "wires": []
    },
    {
        "id": "a1aad6a9.afbb",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "Init",
        "func": "msg.isRequest = true;\nmsg.isAWS = false;\nif(env.get(\"ENVIRONMENT\") !== undefined)  msg.isAWS = true;\n\nmsg.workStart = Date.now();\nmsg.out = {};\n\nmsg.isNOA = false;\nif(msg.payload.noa !== undefined)\nmsg.isNOA = true;\n\nif(env.get(\"ENVIRONMENT\") !== undefined) \n    msg.workDir = env.get(\"ENVIRONMENT\").substring(0,3).toUpperCase();\n\n/*\nif (msg.req.headers['x-auth-token'] !== 'c8ER/H9%p=\";7`:}S%jU<A.eZ@$!BQwn') {\n    node.error(\"Unauthorized\", msg);\n}\n*/\nif (msg.payload  === undefined)\n{\n    node.error(\"Не заданы параметры запроса ....\", msg);\n} else {\n    msg.in = {};\n    msg.out = {};\n    msg.in.bankid_cli = msg.payload;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 40,
        "wires": [
            [
                "5567d13.d0e9db",
                "195186f4.01cf49"
            ]
        ]
    },
    {
        "id": "5567d13.d0e9db",
        "type": "debug",
        "z": "56ce2849.3c576",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 590,
        "y": 40,
        "wires": []
    },
    {
        "id": "104af933.e9c657",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "Reply Ok",
        "func": "var workTime = 0;\nmsg.workStop = Date.now();\nworkTime = (msg.workStop - msg.workStart) / 100;\nmsg.workTime = 'Work time is: '+workTime +' msec.';\n\nvar data = {\n    data: msg.out.trans_data,\n    result: msg.out.result,\n    docs: msg.payload\n};\n\nif(data.length !== 0){\n    msg.statusCode = 200;\n    msg.payload = {\n        code : '200',\n        result : 'ok',\n        time: msg.workTime,\n        path: msg.req.route.path,\n        data : data\n    }\n    return msg;\n} else {\n    msg.statusCode = 200;\n    msg.payload = {\n        code : '402',\n        message : 'empty',\n        workTime: msg.workTime,\n        error: \"No data for request\",\n        data : []\n    }\n    return msg\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 1340,
        "wires": [
            [
                "a5988589.7b73d"
            ]
        ]
    },
    {
        "id": "616cfabc.e25ee4",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "Result Ok XML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n   <soap:Body>\n      <CreateClientFLResponse xmlns=\"http://tempuri.org/\">\n         <CreateClientFLResult>\n            <ResponseId>12547</ResponseId>\n            <RequestId>12547</RequestId>\n            <Result>1</Result>\n            <HasErrors>false</HasErrors>\n            <Errors/>\n            <Client>\n               <ClientId>3322201</ClientId>\n               <ScroogeId>3282141</ScroogeId>\n               <ClientPushABS>true</ClientPushABS>\n            </Client>\n         </CreateClientFLResult>\n      </CreateClientFLResponse>\n   </soap:Body>\n</soap:Envelope>",
        "output": "str",
        "x": 360,
        "y": 1080,
        "wires": [
            [
                "fe92328d.8bd598"
            ]
        ]
    },
    {
        "id": "f6a46e42.084cb8",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "in.data",
        "field": "in.data",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n  \"client\": {\n    \"StateCode\": \"2630418780\",\n    \"Residency\": \"1\",\n    \"Name\": \"Кетцалькоатль Кукумац Кукулькан\"\n  },\n  \"indiv\": {\n    \"LastName\": \"Кетцалькоатль\",\n    \"FirstName\": \"Кукумац\",\n    \"FatherName\": \"Кукулькан\",\n    \"BirthDay\": \"1991-08-28T00:00:00\",\n    \"GENDER\": \"1\",\n    \"MarriageStatus\": \"6\"\n  },\n  \"ident\": [\n    {\n      \"TypeId\": \"4\",\n      \"Series\": \"СН\",\n      \"Number\": \"432311\",\n      \"Registrator\": \"Святошинське РУ ГУ МВС у м.Києві\",\n      \"IssueDate\": \"1997-10-01T00:00:00\",\n      \"ExpirationDate\": \"2099-01-01T00:00:00\",\n      \"CountryCode\": \"UA\"\n    },\n    {\n      \"TypeId\": \"55\",\n      \"Series\": \"\",\n      \"Number\": \"3425654326\",\n      \"Registrator\": \"1456\",\n      \"IssueDate\": \"2020-10-01T00:00:00\",\n      \"ExpirationDate\": \"2040-10-01T00:00:00\",\n      \"CountryCode\": \"UA\"\n    }\n  ],\n  \"addr\": [\n    {\n      \"TypeCode\": \"2\",\n      \"Country\": \"UA\",\n      \"State\": \"Київська\",\n      \"Region\": \"Київ\",\n      \"Town\": \"м. Київ\",\n      \"Street\": \"вул. Бородинского побоища\",\n      \"HouseNumber\": \"21\",\n      \"FlatNumber\": \"16\"\n    },\n    {\n      \"TypeCode\": \"1\",\n      \"Country\": \"UA\",\n      \"State\": \"Київська\",\n      \"Region\": \"Київ\",\n      \"Town\": \"м. Чичен-Ица\",\n      \"Street\": \"вул. пирамида Кукулькана.\",\n      \"HouseNumber\": \"1\",\n      \"FlatNumber\": \"1\"\n    }\n  ],\n  \"comm\": [\n    {\n      \"Value\": \"380631003256\",\n      \"TypeId\": \"3\"\n    },\n    {\n      \"Value\": \"sava@mail.dot.com\",\n      \"TypeId\": \"5\"\n    },\n    {\n      \"Value\": \"www.www.net\",\n      \"TypeId\": \"6\"\n    }\n  ],\n  \"props\": [\n    {\n      \"Refs\": \"\",\n      \"Code\": \"FATF_COUNTRY_CITIZEN\",\n      \"Dict\": \"KL_K040.DBF\",\n      \"Value\": \"804\"\n    },\n    {\n      \"Refs\": \"\",\n      \"Code\": \"BIRTH_COUNTRY\",\n      \"Dict\": \"KL_K040.DBF\",\n      \"Value\": \"804\"\n    },\n    {\n      \"Refs\": \"\",\n      \"Code\": \"BIRTH_PLACE\",\n      \"Dict\": \"\",\n      \"Value\": \"Бердичув\"\n    },\n    {\n      \"Refs\": \"\",\n      \"Code\": \"PROFIT_WAY\",\n      \"Dict\": \"PROFIT_WAY\",\n      \"Value\": \"2\"\n    }\n  ]\n}",
        "output": "json",
        "x": 130,
        "y": 240,
        "wires": [
            [
                "62e1218b.ba8398"
            ]
        ]
    },
    {
        "id": "2ab299a9.cbb38e",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": ">> in.data",
        "func": "msg.in.data = msg.out.trans_data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 260,
        "wires": [
            [
                "a35e36cb.c4af68",
                "c9fd915e.c133"
            ]
        ]
    },
    {
        "id": "947a13c6.30ae18",
        "type": "debug",
        "z": "56ce2849.3c576",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 790,
        "y": 600,
        "wires": []
    },
    {
        "id": "9d9acb1c.ebe87",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "Names Man",
        "field": "xml.out.ClientNames",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "            <tem:ClientNames>\n               <tem:TNames>\n                  <Lang>ENG</Lang>\n                  <Name>Ketcal'koatl</Name>\n                  <FullName>Ketcal'koatl Kukumac Kukul'kan</FullName>\n                  <FullNameR/>\n                  <FullNameD/>\n                  <Status>1</Status>                \n               </tem:TNames>\n               <tem:TNames>\n                  <Lang>RUS</Lang>\n                  <Name>Кетцалькоатль</Name>\n                  <FullName>Кетцалькоатль Кукумац Кукулькан</FullName>\n                  <FullNameR>Кетцалькоатль Кукумац Кукулькан Р</FullNameR>\n                  <FullNameD>Кетцалькоатль Кукумац Кукулькан Д</FullNameD>\n                  <Status>1</Status>\n               </tem:TNames>\n            </tem:ClientNames>",
        "output": "str",
        "x": 130,
        "y": 920,
        "wires": [
            [
                "d3b7b87d.7a9bc"
            ]
        ]
    },
    {
        "id": "6a3e54e9.3540f4",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "Docs b64",
        "field": "in.docs.pass",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "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\nJoi//9k=\n",
        "output": "str",
        "x": 300,
        "y": 960,
        "wires": [
            [
                "21a27c29.50baf4"
            ]
        ]
    },
    {
        "id": "735fe7fd.2c0e68",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "Client Fles Template",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n  \"requestRef\": {{requestRef}},\n  \"mode\" : \"sync\",\n  \"data\": {\n    \"ownerId\": \"{{{out.cliId}}}\",\n    \"fileTypeId\": 109,\n    \"name\": \"{{payload.type}}.{{payload.extension}}\",\n    \"comment\": \"{{payload.type}}\",\n    \"checkSign\": false,\n    \"mode\" : \"sync\",\n    \"content\": \"{{{in.docs.pass}}}\"\n  }\n}",
        "output": "json",
        "x": 680,
        "y": 1280,
        "wires": [
            [
                "12b21493.85efeb",
                "675a4a9d.8840cc"
            ]
        ]
    },
    {
        "id": "76b74724.8671",
        "type": "debug",
        "z": "56ce2849.3c576",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 1160,
        "wires": []
    },
    {
        "id": "3f46feb.d11a882",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "Result",
        "func": "msg.out.result = msg.payload;\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 170,
        "y": 1160,
        "wires": [
            [
                "76b74724.8671",
                "8f574739.0fad3"
            ]
        ]
    },
    {
        "id": "21a27c29.50baf4",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "WS Create Client",
        "func": "\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 130,
        "y": 1060,
        "wires": [
            [
                "7a6bcaec.10ef4c"
            ]
        ]
    },
    {
        "id": "12b21493.85efeb",
        "type": "debug",
        "z": "56ce2849.3c576",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 730,
        "y": 1240,
        "wires": []
    },
    {
        "id": "85fe55d0.2798c8",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "cliId",
        "func": "//var b = msg.payload[\"soap:Envelope\"][\"soap:Body\"][0];\n//msg.out.cliId = b.CreateClientFLResponse[0].CreateClientFLResult[0].Client[0].ClientId[0];\nmsg.out.cliId = msg.payload.createClientFLResponse.createClientFLResult.client.clientId;\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 750,
        "y": 1120,
        "wires": [
            [
                "3f46feb.d11a882"
            ]
        ]
    },
    {
        "id": "fe92328d.8bd598",
        "type": "xml",
        "z": "56ce2849.3c576",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 450,
        "y": 1120,
        "wires": [
            [
                "9435cff6.ac727",
                "b374ba2e.597528"
            ]
        ]
    },
    {
        "id": "8f574739.0fad3",
        "type": "switch",
        "z": "56ce2849.3c576",
        "name": "is cliid",
        "property": "out.cliId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 170,
        "y": 1220,
        "wires": [
            [
                "5054d039.ad3a7"
            ],
            [
                "2d754c58.1f4244"
            ]
        ]
    },
    {
        "id": "5054d039.ad3a7",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "Reply Err",
        "func": "var workTime = 0;\nmsg.workStop = Date.now();\nworkTime = (msg.workStop - msg.workStart) / 100;\nmsg.workTime = 'Work time is: '+workTime +' msec.';\n\nvar data = [\"Client ID not found\"];\nif(data.length !== 0){\n    msg.statusCode = 200;\n    msg.payload = {\n        code : '402',\n        result : 'error',\n        time: msg.workTime,\n        path: msg.req.route.path,\n        data : data\n    }\n    return msg;\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 1220,
        "wires": [
            [
                "a5988589.7b73d"
            ]
        ]
    },
    {
        "id": "675a4a9d.8840cc",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "WP Load File",
        "func": "\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 120,
        "y": 1340,
        "wires": [
            [
                "ec00e697.4609a"
            ]
        ]
    },
    {
        "id": "33ce9da4.cfb572",
        "type": "inject",
        "z": "56ce2849.3c576",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 1460,
        "wires": [
            [
                "9c77ba9d.4750b"
            ]
        ]
    },
    {
        "id": "9c77ba9d.4750b",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "in.bankid_cli",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"person\": {\n        \"type\": \"physical\",\n        \"lastName\": \"Кетцалькоатль\",\n        \"firstName\": \"Кукумац\",\n        \"middleName\": \"Кукулькан\",\n        \"inn\": \"3347780927\",\n        \"birthDay\": \"28.08.1991\",\n        \"sex\": \"M\",\n        \"phone\": \"380631003256\",\n        \"email\": \"sava@mail.dot.com\",\n        \"web\": \"www.www.net\",\n        \"uaResident\": \"1\",\n        \"flagPersonTerror\": \"1\",\n        \"edication\": \"Бог\"\n    },\n\n    \"extends\": {\n        \"country_citizen\": \"804\",\n        \"marital_status\": \"6\",\n        \"work_info\": \"безроботный\",\n        \"birth_country\": \"804\",\n        \"birth_place\": \"Бердичув\",\n        \"profit_way\": \"2\"\n    },\n\n    \"addresses\": [{\n            \"type\": \"factual\",\n            \"country\": \"UA\",\n            \"state\": \"Київська\",\n            \"area\": \"Київ\",\n            \"city\": \"м. Київ\",\n            \"street\": \"вул. Бородинского побоища\",\n            \"houseNo\": \"21\",\n            \"flatNo\": \"16\"\n        },\n        {\n            \"type\": \"juridical\",\n            \"country\": \"UA\",\n            \"state\": \"Київська\",\n            \"area\": \"Київ\",\n            \"city\": \"м. Чичен-Ица\",\n            \"street\": \"вул. пирамида Кукулькана.\",\n            \"houseNo\": \"1\",\n            \"flatNo\": \"1\"\n        }\n    ],\n    \"documents\": [{\n            \"type\": \"passport\",\n            \"typeName\": \"Паспорт\",\n            \"series\": \"СН\",\n            \"number\": \"432311\",\n            \"issue\": \"Святошинське РУ ГУ МВС у м.Києві\",\n            \"dateIssue\": \"01.10.1997\",\n            \"dateExpiration\": \"\",\n            \"issueCountryIso2\": \"UA\"\n        },\n        {\n            \"type\": \"idpassport\",\n            \"typeName\": \"Паспорт картка\",\n            \"series\": \"\",\n            \"number\": \"3425654326\",\n            \"issue\": \"1456\",\n            \"dateIssue\": \"01.10.2020\",\n            \"dateExpiration\": \"01.10.2040\",\n            \"issueCountryIso2\": \"UA\"\n        }\n    ],\n    \"scans\": [{\n            \"type\": \"passport\",\n            \"scanFile\": \"BASE64\",\n            \"dateCreate\": \"dd.mm.yyyy\",\n            \"extension\": \"jpg\"\n\n        },\n        {\n            \"type\": \"photo\",\n            \"scanFile\": \"BASE64\",\n            \"dateCreate\": \"dd.mm.yyyy\",\n            \"extension\": \"jpg\"\n\n        }\n    ]\n}",
        "output": "json",
        "x": 270,
        "y": 1460,
        "wires": [
            [
                "da08e3b7.f3993"
            ]
        ]
    },
    {
        "id": "da08e3b7.f3993",
        "type": "http request",
        "z": "56ce2849.3c576",
        "name": "LOC clients/bankid/client",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost:1880/clients/bankid/client",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 470,
        "y": 1460,
        "wires": [
            [
                "a6fc313c.f836e8"
            ]
        ]
    },
    {
        "id": "a6fc313c.f836e8",
        "type": "debug",
        "z": "56ce2849.3c576",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 710,
        "y": 1460,
        "wires": []
    },
    {
        "id": "2d754c58.1f4244",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "Client Fles Data",
        "func": "msg.payload = msg.in.bankid_cli.scans;\nmsg.requestRef = Math.floor(100000 + Math.random() * 900000);\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 120,
        "y": 1280,
        "wires": [
            [
                "2791c5e1.3feb8a"
            ]
        ]
    },
    {
        "id": "2791c5e1.3feb8a",
        "type": "split",
        "z": "56ce2849.3c576",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 290,
        "y": 1280,
        "wires": [
            [
                "c23c0298.167238"
            ]
        ]
    },
    {
        "id": "bcef6407.1a1908",
        "type": "join",
        "z": "56ce2849.3c576",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 290,
        "y": 1340,
        "wires": [
            [
                "104af933.e9c657"
            ]
        ]
    },
    {
        "id": "a5988589.7b73d",
        "type": "switch",
        "z": "56ce2849.3c576",
        "name": "isRequest",
        "property": "isRequest",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 680,
        "y": 1340,
        "wires": [
            [
                "77b69276.a93cb4"
            ]
        ]
    },
    {
        "id": "ec00e697.4609a",
        "type": "switch",
        "z": "56ce2849.3c576",
        "name": "isAWS",
        "property": "isAWS",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 130,
        "y": 1400,
        "wires": [
            [
                "bcef6407.1a1908"
            ],
            [
                "467a5f5b.a5cd6"
            ]
        ]
    },
    {
        "id": "7a6bcaec.10ef4c",
        "type": "switch",
        "z": "56ce2849.3c576",
        "name": "isAWS",
        "property": "isAWS",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 110,
        "y": 1120,
        "wires": [
            [
                "616cfabc.e25ee4"
            ],
            [
                "e53efd27.7f1838"
            ]
        ]
    },
    {
        "id": "3adc291b.06ef3e",
        "type": "link in",
        "z": "56ce2849.3c576",
        "name": "WP Load File run",
        "links": [
            "467a5f5b.a5cd6"
        ],
        "x": 55,
        "y": 1780,
        "wires": [
            [
                "a1a909a1.50752"
            ]
        ]
    },
    {
        "id": "467a5f5b.a5cd6",
        "type": "link out",
        "z": "56ce2849.3c576",
        "name": "WP Load File i",
        "links": [
            "3adc291b.06ef3e"
        ],
        "x": 235,
        "y": 1400,
        "wires": []
    },
    {
        "id": "7b38379f.929cd8",
        "type": "link out",
        "z": "56ce2849.3c576",
        "name": "WP Load File run",
        "links": [
            "d85c0ec8.07bc9"
        ],
        "x": 995,
        "y": 1780,
        "wires": []
    },
    {
        "id": "a1a909a1.50752",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "WP Load File",
        "func": "\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 180,
        "y": 1780,
        "wires": [
            [
                "9faf61bb.9836b8"
            ]
        ]
    },
    {
        "id": "d85c0ec8.07bc9",
        "type": "link in",
        "z": "56ce2849.3c576",
        "name": "WP Load File i",
        "links": [
            "7b38379f.929cd8"
        ],
        "x": 355,
        "y": 1400,
        "wires": [
            [
                "bcef6407.1a1908"
            ]
        ]
    },
    {
        "id": "66499c78.951514",
        "type": "link in",
        "z": "56ce2849.3c576",
        "name": "WS Create Client run",
        "links": [
            "e53efd27.7f1838"
        ],
        "x": 55,
        "y": 1680,
        "wires": [
            [
                "f1d90a46.9210c"
            ]
        ]
    },
    {
        "id": "32294f78.60cdd8",
        "type": "link out",
        "z": "56ce2849.3c576",
        "name": "WS Create Client run",
        "links": [
            "da57962e.bc7fe"
        ],
        "x": 1095,
        "y": 1680,
        "wires": []
    },
    {
        "id": "f1d90a46.9210c",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "WS Create Client",
        "func": "\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 190,
        "y": 1680,
        "wires": [
            [
                "4d2769ba.4b12f"
            ]
        ]
    },
    {
        "id": "e53efd27.7f1838",
        "type": "link out",
        "z": "56ce2849.3c576",
        "name": "WS Create Client i",
        "links": [
            "66499c78.951514"
        ],
        "x": 215,
        "y": 1120,
        "wires": []
    },
    {
        "id": "da57962e.bc7fe",
        "type": "link in",
        "z": "56ce2849.3c576",
        "name": "WS Create Client i",
        "links": [
            "32294f78.60cdd8"
        ],
        "x": 295,
        "y": 1120,
        "wires": [
            [
                "fe92328d.8bd598"
            ]
        ]
    },
    {
        "id": "62e1218b.ba8398",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "Param",
        "func": "msg.isRequest = false;\nmsg.isAWS = true;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "c9fd915e.c133"
            ]
        ]
    },
    {
        "id": "714c4b5f.7aedf4",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "Generate IPN",
        "func": "function getIPNKey(data) {\n    var aMulti = [-1, 5, 7, 9, 4, 6, 10, 5, 7, 0];\n    var key = data.length;\n    if (data.length == 10) {\n        var sum = 0;\n        for (var i = 0; i < aMulti.length; i++) {\n            var o = data[i] * aMulti[i];\n            sum += o;\n        }\n    }\n    var msum = sum - (Math.trunc(sum / 11) * 11);\n    return msum < 10 ? msum : 0;\n}\n\nfunction excelDateToJSDate(serialDate) {\n    var e0date = new Date(0); // epoch \"zero\" date\n    var offset = e0date.getTimezoneOffset(); // tz offset in min\n    var dateOut = new Date(Math.round((serialDate - 25568) * 86400 * 1000));\n    return dateOut.toJSON();\n}\n\nfunction generateIPN() {\n\n    var requestAmo;\n    var requestSex;\n    var requestDat;\n    var requestKey;\n\n    requestDat = Math.floor(Math.random() * 20000) + 20000;\n    requestAmo = Math.floor(Math.random() * 100) + 100;\n    requestSex = Math.floor(Math.random() * 10 - 1) + 1;\n    requestKey = Math.floor(Math.random() * 10 - 1) + 1;\n    var dataPre = '' + requestDat + requestAmo + requestSex + requestKey;\n    var dataOk = dataPre.substr(0, 9) + getIPNKey(dataPre);\n    return dataOk;\n}\n\nmsg.payload = generateIPN();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 280,
        "y": 1580,
        "wires": [
            [
                "8681f7e2.8b5b98"
            ]
        ]
    },
    {
        "id": "47b59516.8c27ac",
        "type": "inject",
        "z": "56ce2849.3c576",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 1580,
        "wires": [
            [
                "714c4b5f.7aedf4"
            ]
        ]
    },
    {
        "id": "8681f7e2.8b5b98",
        "type": "debug",
        "z": "56ce2849.3c576",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 470,
        "y": 1580,
        "wires": []
    },
    {
        "id": "c78849c2.952e4",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "🡹P/D/L🡻",
        "func": "msg.workDir = 'LOC';\nif(env.get(\"ENVIRONMENT\") !== undefined) \n    msg.workDir = env.get(\"ENVIRONMENT\").substring(0,3).toUpperCase();\nif (msg.workDir == \"PRO\") {\n    msg.headers['Host'] = msg.hosts.PRO;\n    return [msg, null, null];\n} else if (msg.workDir == \"DEV\") {\n    return [null, msg, null];\n} else if (msg.workDir == \"LOC\") {\n    return [null, null, msg];\n}",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 1680,
        "wires": [
            [
                "325b7183.bab26e"
            ],
            [
                "88efdd82.b9045"
            ],
            [
                "88efdd82.b9045"
            ]
        ]
    },
    {
        "id": "325b7183.bab26e",
        "type": "http request",
        "z": "56ce2849.3c576",
        "name": "WB kv-v-is3-pr",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://10.1.16.4/Webbank/WebServices/WorkWithClients/ClientApi.asmx",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 700,
        "y": 1660,
        "wires": [
            [
                "966c5eae.799c4"
            ]
        ]
    },
    {
        "id": "88efdd82.b9045",
        "type": "http request",
        "z": "56ce2849.3c576",
        "name": "WB kv-v-is2-pp",
        "method": "POST",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://10.1.15.247/Webbank_MB/WebServices/WorkWithClients/ClientApi.asmx",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 700,
        "y": 1700,
        "wires": [
            [
                "966c5eae.799c4"
            ]
        ]
    },
    {
        "id": "966c5eae.799c4",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": ">>>",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 890,
        "y": 1680,
        "wires": [
            [
                "91c5f748.256488",
                "32294f78.60cdd8"
            ]
        ]
    },
    {
        "id": "4d2769ba.4b12f",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "headers",
        "func": "msg.headers = {};\nmsg.hosts = {};\nmsg.hosts.PRO = 'kv-v-is3-pr';\nmsg.hosts.DEV = 'kv-v-is2-pp';\n\nmsg.headers['Accept-Encoding'] = 'gzip,deflate';\nmsg.headers['Content-Type'] = 'text/xml;charset=UTF-8';\nmsg.headers['SOAPAction'] = 'http://tempuri.org/CreateClientFL';\nmsg.headers['Host'] = msg.hosts.DEV;\nmsg.headers['Connection'] = 'Keep-Alive';\nmsg.headers['User-Agent'] = 'Apache-HttpClient/4.1.1 (java 1.5)';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 1680,
        "wires": [
            [
                "c78849c2.952e4"
            ]
        ]
    },
    {
        "id": "8fe60f.0ad721f",
        "type": "switch",
        "z": "56ce2849.3c576",
        "name": "isAWS",
        "property": "isAWS",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 960,
        "wires": [
            [
                "e5b24d49.47b17"
            ],
            [
                "dbd7d396.5b86"
            ]
        ]
    },
    {
        "id": "c28173f.a19f91",
        "type": "inject",
        "z": "56ce2849.3c576",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 1500,
        "wires": [
            [
                "1d9508f.d14bd77"
            ]
        ]
    },
    {
        "id": "1d9508f.d14bd77",
        "type": "template",
        "z": "56ce2849.3c576",
        "name": "in.bankid_cli",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"person\": {\n        \"type\": \"physical\",\n        \"lastName\": \"Кетцалькоатль\",\n        \"firstName\": \"Кукумац\",\n        \"middleName\": \"Кукулькан\",\n        \"inn\": \"3347780927\",\n        \"birthDay\": \"28.08.1991\",\n        \"sex\": \"M\",\n        \"phone\": \"380631003256\",\n        \"email\": \"sava@mail.dot.com\",\n        \"web\": \"www.www.net\",\n        \"uaResident\": \"1\",\n        \"flagPersonTerror\": \"1\",\n        \"edication\": \"Бог\"\n    },\n\n    \"extends\": {\n        \"country_citizen\": \"804\",\n        \"marital_status\": \"6\",\n        \"work_info\": \"безроботный\",\n        \"birth_country\": \"804\",\n        \"birth_place\": \"Бердичув\",\n        \"profit_way\": \"2\"\n    },\n\n    \"addresses\": [{\n            \"type\": \"factual\",\n            \"country\": \"UA\",\n            \"state\": \"Київська\",\n            \"area\": \"Київ\",\n            \"city\": \"м. Київ\",\n            \"street\": \"вул. Бородинского побоища\",\n            \"houseNo\": \"21\",\n            \"flatNo\": \"16\"\n        },\n        {\n            \"type\": \"juridical\",\n            \"country\": \"UA\",\n            \"state\": \"Київська\",\n            \"area\": \"Київ\",\n            \"city\": \"м. Чичен-Ица\",\n            \"street\": \"вул. пирамида Кукулькана.\",\n            \"houseNo\": \"1\",\n            \"flatNo\": \"1\"\n        }\n    ],\n    \"documents\": [{\n            \"type\": \"passport\",\n            \"typeName\": \"Паспорт\",\n            \"series\": \"СН\",\n            \"number\": \"432311\",\n            \"issue\": \"Святошинське РУ ГУ МВС у м.Києві\",\n            \"dateIssue\": \"01.10.1997\",\n            \"dateExpiration\": \"\",\n            \"issueCountryIso2\": \"UA\"\n        },\n        {\n            \"type\": \"idpassport\",\n            \"typeName\": \"Паспорт картка\",\n            \"series\": \"\",\n            \"number\": \"3425654326\",\n            \"issue\": \"1456\",\n            \"dateIssue\": \"01.10.2020\",\n            \"dateExpiration\": \"01.10.2040\",\n            \"issueCountryIso2\": \"UA\"\n        }\n    ],\n    \"scans\": [{\n            \"type\": \"passport\",\n            \"scanFile\": \"BASE64\",\n            \"dateCreate\": \"dd.mm.yyyy\",\n            \"extension\": \"jpg\"\n\n        },\n        {\n            \"type\": \"photo\",\n            \"scanFile\": \"BASE64\",\n            \"dateCreate\": \"dd.mm.yyyy\",\n            \"extension\": \"jpg\"\n\n        }\n    ]\n}",
        "output": "json",
        "x": 270,
        "y": 1500,
        "wires": [
            [
                "520557cd.ea7d88"
            ]
        ]
    },
    {
        "id": "520557cd.ea7d88",
        "type": "http request",
        "z": "56ce2849.3c576",
        "name": "AWS clients/bankid/client",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://nr-clients.dev.ukrgasaws.com/clients/bankid/client",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 470,
        "y": 1500,
        "wires": [
            [
                "2531cd88.d11b7a"
            ]
        ]
    },
    {
        "id": "2531cd88.d11b7a",
        "type": "debug",
        "z": "56ce2849.3c576",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 710,
        "y": 1500,
        "wires": []
    },
    {
        "id": "9a4bb0ef.611e58",
        "type": "catch",
        "z": "56ce2849.3c576",
        "name": "",
        "scope": [
            "325b7183.bab26e",
            "88efdd82.b9045",
            "5f0e745f.deb34c"
        ],
        "uncaught": false,
        "x": 830,
        "y": 40,
        "wires": [
            [
                "38a90117.83de26"
            ]
        ]
    },
    {
        "id": "38a90117.83de26",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "Reply Err",
        "func": "var workTime = 0;\nmsg.workStop = Date.now();\nworkTime = (msg.workStop - msg.workStart) / 100;\nmsg.workTime = 'Work time is: '+workTime +' msec.';\n\nvar data = msg.payload;\nif(data.length !== 0){\n    msg.statusCode = 200;\n    msg.payload = {\n        code : '402',\n        result : 'error',\n        time: msg.workTime,\n        path: msg.req.route.path,\n        data : data\n    }\n    return msg;\n} \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 40,
        "wires": [
            [
                "9d123411.d6c668"
            ]
        ]
    },
    {
        "id": "33b4fe53.61ad1a",
        "type": "http response",
        "z": "56ce2849.3c576",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 990,
        "y": 80,
        "wires": []
    },
    {
        "id": "73b9df7.a8c6ba",
        "type": "debug",
        "z": "56ce2849.3c576",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 120,
        "wires": []
    },
    {
        "id": "9d123411.d6c668",
        "type": "switch",
        "z": "56ce2849.3c576",
        "name": "isRequest",
        "property": "isRequest",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 840,
        "y": 80,
        "wires": [
            [
                "33b4fe53.61ad1a"
            ],
            [
                "73b9df7.a8c6ba"
            ]
        ]
    },
    {
        "id": "9faf61bb.9836b8",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "getToken",
        "func": "msg.wpTokenInfo = global.get('WP_TOKEN');\n\n//msg.wpTokenInfo.token += '44';\n\nmsg.workDir = 'LOC';\nif(env.get(\"ENVIRONMENT\") !== undefined) \n    msg.workDir = env.get(\"ENVIRONMENT\").substring(0,3).toUpperCase();\n\nif (msg.workDir == \"PRO\") {\n    msg.wpHost = 'kv-v-webpl-pr1.ukrgas.bank.local';    \n} else if (msg.workDir == \"DEV\") {\n    msg.wpHost = 'kv-v-webpl-pp1';\n}\n\nif( msg.wpTokenInfo === undefined)\n    node.error('Token not found !', msg);   \nelse\n    return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 1740,
        "wires": [
            [
                "e85b811c.9e842"
            ]
        ]
    },
    {
        "id": "f9f4c226.12732",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "🡹P/D/L🡻",
        "func": "msg.workDir = 'LOC';\nif(env.get(\"ENVIRONMENT\") !== undefined) \n    msg.workDir = env.get(\"ENVIRONMENT\").substring(0,3).toUpperCase();\nif (msg.workDir == \"PRO\") {\n    return [msg, null, null];\n} else if (msg.workDir == \"DEV\") {\n    return [null, msg, null];\n} else if (msg.workDir == \"LOC\") {\n    return [null, null, msg];\n}",
        "outputs": 3,
        "noerr": 0,
        "x": 520,
        "y": 1780,
        "wires": [
            [
                "74f8b1d6.9b4d28"
            ],
            [
                "5863dad6.a11bc4"
            ],
            [
                "5863dad6.a11bc4"
            ]
        ]
    },
    {
        "id": "74f8b1d6.9b4d28",
        "type": "http request",
        "z": "56ce2849.3c576",
        "name": "PR FileApi/files PUT",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "query",
        "url": "http://10.1.16.44/WebPlatform/api/v1/FileApi/files",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 720,
        "y": 1760,
        "wires": [
            [
                "d4db8bdf.91dbb"
            ]
        ]
    },
    {
        "id": "5863dad6.a11bc4",
        "type": "http request",
        "z": "56ce2849.3c576",
        "name": "PP FileApi/files PUT",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "query",
        "url": "http://10.1.16.40/WebPlatform/api/v1/FileApi/files",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 720,
        "y": 1800,
        "wires": [
            [
                "d4db8bdf.91dbb"
            ]
        ]
    },
    {
        "id": "d4db8bdf.91dbb",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": ">>>",
        "func": "if (msg.payload === \"\"){\n    msg.payload = msg.wpTokenInfo.wpHost;\n    msg.payload += (' '+ msg.headers[\"www-authenticate\"]);    \n   \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 890,
        "y": 1780,
        "wires": [
            [
                "7b38379f.929cd8",
                "57471d07.7e41d4"
            ]
        ]
    },
    {
        "id": "e85b811c.9e842",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "headers",
        "func": "var tokenInfo = msg.wpTokenInfo;\nvar requestRef = Math.floor(100000 + Math.random() * 900000);\nmsg.requestRef = requestRef;\n\nmsg.headers = {};\nmsg.headers[\"authorization\"] = \"Bearer \"+tokenInfo.token;\nmsg.headers[\"accept\"] = \"application/json\";\nmsg.headers[\"Host\"] = tokenInfo.wpHost;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 1800,
        "wires": [
            [
                "f9f4c226.12732",
                "96240c71.b22cd"
            ]
        ]
    },
    {
        "id": "91c5f748.256488",
        "type": "debug",
        "z": "56ce2849.3c576",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1030,
        "y": 1620,
        "wires": []
    },
    {
        "id": "96240c71.b22cd",
        "type": "debug",
        "z": "56ce2849.3c576",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 1840,
        "wires": []
    },
    {
        "id": "57471d07.7e41d4",
        "type": "debug",
        "z": "56ce2849.3c576",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 1840,
        "wires": []
    },
    {
        "id": "c23c0298.167238",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "Client Fles Data",
        "func": "\nmsg.requestRef = Math.floor(100000 + Math.random() * 900000);\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 460,
        "y": 1280,
        "wires": [
            [
                "735fe7fd.2c0e68"
            ]
        ]
    },
    {
        "id": "9435cff6.ac727",
        "type": "debug",
        "z": "56ce2849.3c576",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 610,
        "y": 1080,
        "wires": []
    },
    {
        "id": "b374ba2e.597528",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "Simplify",
        "func": "msg.payload = msg.payload['soap:Envelope']['soap:Body'][0];\nfunction simplify(obj) {\n    if (Object.prototype.toString.call(obj) == \"[object Array]\") {\n        var out = []; \n        if (obj.length > 1) {\n            for (var i in obj) {\n                out[i] = simplify(obj[i]);\n            }\n            return out;\n        } else if (obj.length == 1) {\n            out = simplify(obj[0]);\n            return out;\n        } else {\n            return \"\";\n        }\n   } else if (Object.prototype.toString.call(obj) == \"[object Object]\") {\n       var out = {};\n       for (var property in obj) {\n           outProperty = property[0].toLowerCase();\n           outProperty = outProperty + property.substr(1, property.length);\n           out[outProperty] = simplify(obj[property]);\n       }\n        return out;\n    } else {\n        return obj;\n    }\n}\n\nmsg.payload = simplify(msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 600,
        "y": 1120,
        "wires": [
            [
                "9435cff6.ac727",
                "85fe55d0.2798c8"
            ]
        ]
    },
    {
        "id": "4609bc57.c5782c",
        "type": "inject",
        "z": "56ce2849.3c576",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 1540,
        "wires": [
            [
                "a37a224.bf625e"
            ]
        ]
    },
    {
        "id": "a37a224.bf625e",
        "type": "function",
        "z": "56ce2849.3c576",
        "name": "getToken",
        "func": "msg.wpTokenInfo = global.get('WP_TOKEN');\n\nmsg.workDir = 'LOC';\nif(env.get(\"ENVIRONMENT\") !== undefined) \n    msg.workDir = env.get(\"ENVIRONMENT\").substring(0,3).toUpperCase();\n\nif (msg.workDir == \"PRO\") {\n    msg.wpHost = 'kv-v-webpl-pr1.ukrgas.bank.local';    \n} else if (msg.workDir == \"DEV\") {\n    msg.wpHost = 'kv-v-webpl-pp1';\n}\n\nif( msg.wpTokenInfo === undefined)\n    node.error('Token not found !', msg);   \nelse\n    return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 260,
        "y": 1540,
        "wires": [
            [
                "77e38076.8dbcb8"
            ]
        ]
    },
    {
        "id": "77e38076.8dbcb8",
        "type": "debug",
        "z": "56ce2849.3c576",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 1540,
        "wires": []
    }
]